/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  CurveStEthBridge,
  CurveStEthBridgeInterface,
} from "../CurveStEthBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rollupProcessor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AsyncDisabled",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidConfiguration",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInputA",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOutputA",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidUnwrapReturnValue",
    type: "error",
  },
  {
    inputs: [],
    name: "MissingImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "CURVE_POOL",
    outputs: [
      {
        internalType: "contract ICurvePool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LIDO",
    outputs: [
      {
        internalType: "contract ILido",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROLLUP_PROCESSOR",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUBSIDY",
    outputs: [
      {
        internalType: "contract ISubsidy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WRAPPED_STETH",
    outputs: [
      {
        internalType: "contract IWstETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "computeCriteria",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "_inputAssetA",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "_outputAssetA",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_totalInputValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_interactionNonce",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_auxData",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "convert",
    outputs: [
      {
        internalType: "uint256",
        name: "outputValueA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "finalise",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620017983803806200179883398101604081905262000034916200052e565b6001600160a01b03811660805260405163c661065760e01b81526001600482015273ae7ab96520de3a18e5e111b5eaab095312d7fe849073dc24316b9ae028f1497c275eb9192a3ea0f670229063c661065790602401602060405180830381865afa158015620000a8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000ce91906200052e565b6001600160a01b031614620000f65760405163c52a9bd360e01b815260040160405180910390fd5b6200013973ae7ab96520de3a18e5e111b5eaab095312d7fe84737f39c581f595b53c5cb19bd0b3f8da6c935e2ca0600019620001c0602090811b6200041717901c565b6200017c73ae7ab96520de3a18e5e111b5eaab095312d7fe8473dc24316b9ae028f1497c275eb9192a3ea0f67022600019620001c0602090811b6200041717901c565b620001b9608051600019737f39c581f595b53c5cb19bd0b3f8da6c935e2ca06001600160a01b0316620001c060201b62000417179092919060201c565b5062000647565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa15801562000212573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000238919062000560565b6200024491906200057a565b604080516001600160a01b038616602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152919250620002a091869190620002a616565b50505050565b600062000302826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166200038d60201b62000552179092919060201c565b805190915015620003885780806020019051810190620003239190620005a1565b620003885760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b505050565b60606200039e8484600085620003a6565b949350505050565b606082471015620004095760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016200037f565b600080866001600160a01b03168587604051620004279190620005f4565b60006040518083038185875af1925050503d806000811462000466576040519150601f19603f3d011682016040523d82523d6000602084013e6200046b565b606091505b5090925090506200047f878383876200048a565b979650505050505050565b60608315620004fb578251620004f3576001600160a01b0385163b620004f35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200037f565b50816200039e565b6200039e8383815115620005125781518083602001fd5b8060405162461bcd60e51b81526004016200037f919062000612565b6000602082840312156200054157600080fd5b81516001600160a01b03811681146200055957600080fd5b9392505050565b6000602082840312156200057357600080fd5b5051919050565b600082198211156200059c57634e487b7160e01b600052601160045260246000fd5b500190565b600060208284031215620005b457600080fd5b815180151581146200055957600080fd5b60005b83811015620005e2578181015183820152602001620005c8565b83811115620002a05750506000910152565b6000825162000608818460208701620005c5565b9190910192915050565b602081526000825180602084015262000633816040850160208701620005c5565b601f01601f19169190910160400192915050565b60805161112762000671600039600081816101ef01528181610253015261078f01526111276000f3fe60806040526004361061009a5760003560e01c80638b21f17011610069578063aaf5eb681161004e578063aaf5eb68146101b3578063ae9467b5146101dd578063dbeacd541461021157600080fd5b80638b21f170146101785780639b07d342146101a057600080fd5b806312280c19146100a657806326c3b515146100f85780636508156e1461012857806386a8b4b51461015057600080fd5b366100a157005b600080fd5b3480156100b257600080fd5b506100ce737f39c581f595b53c5cb19bd0b3f8da6c935e2ca081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61010b610106366004610d79565b610237565b6040805193845260208401929092521515908201526060016100ef565b34801561013457600080fd5b506100ce73abc30e831b5cc173a9ed5941714a7845c909e7fa81565b34801561015c57600080fd5b506100ce73dc24316b9ae028f1497c275eb9192a3ea0f6702281565b34801561018457600080fd5b506100ce73ae7ab96520de3a18e5e111b5eaab095312d7fe8481565b61010b6101ae366004610e0b565b6103e0565b3480156101bf57600080fd5b506101cf670de0b6b3a764000081565b6040519081526020016100ef565b3480156101e957600080fd5b506100ce7f000000000000000000000000000000000000000000000000000000000000000081565b34801561021d57600080fd5b506101cf61022c366004610e80565b600095945050505050565b600080803373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146102aa576040517f48f5c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060016102be60608e0160408f01610f1b565b60038111156102cf576102cf610eec565b149050600060028d60400160208101906102e99190610f1b565b60038111156102fa576102fa610eec565b1480156103585750737f39c581f595b53c5cb19bd0b3f8da6c935e2ca073ffffffffffffffffffffffffffffffffffffffff168d60200160208101906103409190610f43565b73ffffffffffffffffffffffffffffffffffffffff16145b905081806103635750805b610399576040517fc582880b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816103b9576103b4898c8967ffffffffffffffff168b610569565b6103ce565b6103ce898c8967ffffffffffffffff1661080d565b94505050985098509895505050505050565b60008060006040517f26d18eab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa15801561048e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b29190610f5e565b6104bc9190610fa6565b6040805173ffffffffffffffffffffffffffffffffffffffff8616602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b30000000000000000000000000000000000000000000000000000000017905290915061054c908590610a15565b50505050565b60606105618484600085610b2b565b949350505050565b6000600161057d6060860160408701610f1b565b600381111561058e5761058e610eec565b146105c5576040517f6c98dcaf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fde0e9a3e00000000000000000000000000000000000000000000000000000000815260048101869052600090737f39c581f595b53c5cb19bd0b3f8da6c935e2ca09063de0e9a3e906024016020604051808303816000875af1158015610633573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106579190610f5e565b90506000670de0b6b3a764000061066e8684610fbe565b6106789190610ffb565b6040517f3df0212400000000000000000000000000000000000000000000000000000000815260016004820152600060248201819052604482018590526064820183905291925073dc24316b9ae028f1497c275eb9192a3ea0f6702290633df02124906084016020604051808303816000875af11580156106fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107219190610f5e565b905047935080841015610760576040517fe44b5b5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f12a53623000000000000000000000000000000000000000000000000000000008152600481018690527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906312a536239086906024016000604051808303818588803b1580156107e957600080fd5b505af11580156107fd573d6000803e3d6000fd5b5050505050505050949350505050565b600060026108216060850160408601610f1b565b600381111561083257610832610eec565b1415806108785750737f39c581f595b53c5cb19bd0b3f8da6c935e2ca061085f6040850160208601610f43565b73ffffffffffffffffffffffffffffffffffffffff1614155b156108af576040517f6c98dcaf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000670de0b6b3a76400006108c48487610fbe565b6108ce9190610ffb565b6040517f3df0212400000000000000000000000000000000000000000000000000000000815260006004820181905260016024830152604482018890526064820183905291925073dc24316b9ae028f1497c275eb9192a3ea0f6702290633df0212490889060840160206040518083038185885af1158015610954573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906109799190610f5e565b6040517fea598cb000000000000000000000000000000000000000000000000000000000815260048101829052909150737f39c581f595b53c5cb19bd0b3f8da6c935e2ca09063ea598cb0906024016020604051808303816000875af11580156109e7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0b9190610f5e565b9695505050505050565b6000610a77826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166105529092919063ffffffff16565b805190915015610b265780806020019051810190610a959190611036565b610b26576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b505050565b606082471015610bbd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610b1d565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610be69190611084565b60006040518083038185875af1925050503d8060008114610c23576040519150601f19603f3d011682016040523d82523d6000602084013e610c28565b606091505b5091509150610c3987838387610c44565b979650505050505050565b60608315610cd7578251610cd05773ffffffffffffffffffffffffffffffffffffffff85163b610cd0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b1d565b5081610561565b6105618383815115610cec5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1d91906110a0565b600060608284031215610d3257600080fd5b50919050565b803567ffffffffffffffff81168114610d5057600080fd5b919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610d5057600080fd5b600080600080600080600080610200898b031215610d9657600080fd5b610da08a8a610d20565b9750610daf8a60608b01610d20565b9650610dbe8a60c08b01610d20565b9550610dce8a6101208b01610d20565b945061018089013593506101a08901359250610ded6101c08a01610d38565b9150610dfc6101e08a01610d55565b90509295985092959890939650565b6000806000806000806101c08789031215610e2557600080fd5b610e2f8888610d20565b9550610e3e8860608901610d20565b9450610e4d8860c08901610d20565b9350610e5d886101208901610d20565b92506101808701359150610e746101a08801610d38565b90509295509295509295565b60008060008060006101a08688031215610e9957600080fd5b610ea38787610d20565b9450610eb28760608801610d20565b9350610ec18760c08801610d20565b9250610ed1876101208801610d20565b9150610ee06101808701610d38565b90509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060208284031215610f2d57600080fd5b813560048110610f3c57600080fd5b9392505050565b600060208284031215610f5557600080fd5b610f3c82610d55565b600060208284031215610f7057600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115610fb957610fb9610f77565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ff657610ff6610f77565b500290565b600082611031577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60006020828403121561104857600080fd5b81518015158114610f3c57600080fd5b60005b8381101561107357818101518382015260200161105b565b8381111561054c5750506000910152565b60008251611096818460208701611058565b9190910192915050565b60208152600082518060208401526110bf816040850160208701611058565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea2646970667358221220721a71c05ea71278a35b92fc6dd5ae9398ea51e5f0c1b197ae4176dea3b4602564736f6c634300080a0033";

type CurveStEthBridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurveStEthBridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CurveStEthBridge__factory extends ContractFactory {
  constructor(...args: CurveStEthBridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _rollupProcessor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CurveStEthBridge> {
    return super.deploy(
      _rollupProcessor,
      overrides || {}
    ) as Promise<CurveStEthBridge>;
  }
  override getDeployTransaction(
    _rollupProcessor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_rollupProcessor, overrides || {});
  }
  override attach(address: string): CurveStEthBridge {
    return super.attach(address) as CurveStEthBridge;
  }
  override connect(signer: Signer): CurveStEthBridge__factory {
    return super.connect(signer) as CurveStEthBridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurveStEthBridgeInterface {
    return new utils.Interface(_abi) as CurveStEthBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurveStEthBridge {
    return new Contract(address, _abi, signerOrProvider) as CurveStEthBridge;
  }
}
