/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common.js";
import type { GasBase, GasBaseInterface } from "../GasBase.js";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_defiProxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridgeAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "_inputAssetA",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "_inputAssetB",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "_outputAssetA",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "_outputAssetB",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_totalInputValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_interactionNonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_auxInputData",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_rollupBeneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gasLimit",
        type: "uint256",
      },
    ],
    name: "convert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "defiProxy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ethPayments",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSupportedAssetsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSupportedBridgesLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_interactionNonce",
        type: "uint256",
      },
    ],
    name: "receiveEthFromBridge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161071038038061071083398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61067d806100936000396000f3fe6080604052600436106100695760003560e01c8063a8d1eae711610043578063a8d1eae71461010b578063c0fd22b71461010b578063dcefed851461012957610070565b806312a536231461007f578063605806121461009457806377663a78146100b457610070565b3661007057005b34801561007c57600080fd5b50005b61009261008d36600461035a565b610156565b005b3480156100a057600080fd5b506100926100af366004610432565b61017c565b3480156100c057600080fd5b506000546100e19073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561011757600080fd5b5060005b604051908152602001610102565b34801561013557600080fd5b5061011b61014436600461035a565b60016020526000908152604090205481565b600081815260016020526040812080543492906101749084906104d8565b909155505050565b60008054819073ffffffffffffffffffffffffffffffffffffffff16837f4bd947a8000000000000000000000000000000000000000000000000000000008e8e8e8e8e8e8e8e60018f6040516024016101de9a99989796959493929190610582565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051610267919061060c565b6000604051808303818686f4925050503d80600081146102a3576040519150601f19603f3d011682016040523d82523d6000602084013e6102a8565b606091505b50915091508161034c578051610344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f52657665727420776974686f7574206572726f72206d657373616765202d2d3e60448201527f2070726f6261626c79206f7574206f6620676173000000000000000000000000606482015260840160405180910390fd5b805181602001fd5b505050505050505050505050565b60006020828403121561036c57600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461039757600080fd5b919050565b6000606082840312156103ae57600080fd5b6040516060810181811067ffffffffffffffff821117156103f8577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040528235815290508061040e60208401610373565b602082015260408301356004811061042557600080fd5b6040919091015292915050565b6000806000806000806000806000806102408b8d03121561045257600080fd5b61045b8b610373565b995061046a8c60208d0161039c565b98506104798c60808d0161039c565b97506104888c60e08d0161039c565b96506104988c6101408d0161039c565b95506101a08b013594506101c08b013593506101e08b013592506104bf6102008c01610373565b91506102208b013590509295989b9194979a5092959850565b60008219821115610512577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b8051825273ffffffffffffffffffffffffffffffffffffffff6020820151166020830152604081015160048110610577577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b806040840152505050565b73ffffffffffffffffffffffffffffffffffffffff8b811682526102408201906105af602084018d610517565b6105bc608084018c610517565b6105c960e084018b610517565b6105d761014084018a610517565b876101a0840152866101c0840152856101e084015284610200840152808416610220840152509b9a5050505050505050505050565b6000825160005b8181101561062d5760208186018101518583015201610613565b8181111561063c576000828501525b50919091019291505056fea26469706673582212205e81c75687d2f470d71110b7be4d410ae32db109f8aea143ebeb100b32ba1d3b64736f6c634300080a0033";

type GasBaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GasBaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GasBase__factory extends ContractFactory {
  constructor(...args: GasBaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _defiProxy: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GasBase> {
    return super.deploy(_defiProxy, overrides || {}) as Promise<GasBase>;
  }
  override getDeployTransaction(
    _defiProxy: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_defiProxy, overrides || {});
  }
  override attach(address: string): GasBase {
    return super.attach(address) as GasBase;
  }
  override connect(signer: Signer): GasBase__factory {
    return super.connect(signer) as GasBase__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GasBaseInterface {
    return new utils.Interface(_abi) as GasBaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GasBase {
    return new Contract(address, _abi, signerOrProvider) as GasBase;
  }
}
