/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AngleSLPBridge,
  AngleSLPBridgeInterface,
} from "../AngleSLPBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rollupProcessor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AsyncDisabled",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAuxData",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInputA",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInputAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOutputA",
    type: "error",
  },
  {
    inputs: [],
    name: "MissingImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "DAI",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FRAX",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POOLMANAGER_DAI",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POOLMANAGER_FRAX",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POOLMANAGER_USDC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POOLMANAGER_WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROLLUP_PROCESSOR",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SANDAI",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SANFRAX",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SANUSDC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SANWETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STABLE_MASTER",
    outputs: [
      {
        internalType: "contract IStableMaster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUBSIDY",
    outputs: [
      {
        internalType: "contract ISubsidy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint64",
        name: "_auxData",
        type: "uint64",
      },
    ],
    name: "computeCriteria",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "_inputAssetA",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "_outputAssetA",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_totalInputValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_interactionNonce",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_auxData",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "_rollupBeneficiary",
        type: "address",
      },
    ],
    name: "convert",
    outputs: [
      {
        internalType: "uint256",
        name: "outputValueA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "finalise",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collateral",
        type: "address",
      },
    ],
    name: "getPoolManagerAndSanToken",
    outputs: [
      {
        internalType: "address",
        name: "poolManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "sanToken",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002f5f38038062002f5f8339810160408190526200003491620009ef565b6001600160a01b0381166080526200006073c9daabc677f3d1301006e723bd21c60be57a5915620002b0565b6200007f73e9f183fc656656f1f17af1f2b0df79b8ff9ad8ed620002b0565b6200009e733f66867b4b6eceba0dbb6776be15619f73bc30a2620002b0565b620000bd736b4ee7352406707003bc6f6b96595fd35925af48620002b0565b6040805160028082526060820183526000926020830190803683375050604080516002808252606082018352939450600093909250906020830190803683375050604080516002808252606082018352939450600093909250906020830190803683370190505090506000836000815181106200013e576200013e62000a2c565b60200260200101818152505060018360018151811062000162576200016262000a2c565b6020026020010181815250506202bf208260008151811062000188576200018862000a2c565b602002602001019063ffffffff16908163ffffffff16815250506203345082600181518110620001bc57620001bc62000a2c565b602002602001019063ffffffff16908163ffffffff1681525050604181600081518110620001ee57620001ee62000a2c565b602002602001019063ffffffff16908163ffffffff1681525050604b8160018151811062000220576200022062000a2c565b63ffffffff909216602092830291909101909101526040516338d8461360e11b815273abc30e831b5cc173a9ed5941714a7845c909e7fa906371b08c2690620002729086908690869060040162000a85565b600060405180830381600087803b1580156200028d57600080fd5b505af1158015620002a2573d6000803e3d6000fd5b505050505050505062000f01565b60405163ba8b722360e01b81526001600160a01b03821660048201526000908190735addc89785d75c86ab939e9e15bfbbb7fc086a879063ba8b722390602401600060405180830381865afa1580156200030e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000338919081019062000cee565b5050608051604051636eb1769f60e11b81523060048201526001600160a01b0391821660248201529799509597506000969589169563dd62ed3e955060440193506200038392505050565b602060405180830381865afa158015620003a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003c7919062000e41565b905060001981146200042457620003fb6080516000856001600160a01b03166200060460201b62000e8b179092919060201c565b62000424608051600019856001600160a01b03166200060460201b62000e8b179092919060201c565b604051636eb1769f60e11b8152306004820152735addc89785d75c86ab939e9e15bfbbb7fc086a8760248201526001600160a01b0384169063dd62ed3e90604401602060405180830381865afa15801562000483573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004a9919062000e41565b905060001981146200052a57620004ef735addc89785d75c86ab939e9e15bfbbb7fc086a876000856001600160a01b03166200060460201b62000e8b179092919060201c565b6200052a735addc89785d75c86ab939e9e15bfbbb7fc086a87600019856001600160a01b03166200060460201b62000e8b179092919060201c565b608051604051636eb1769f60e11b81523060048201526001600160a01b0391821660248201529083169063dd62ed3e90604401602060405180830381865afa1580156200057b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005a1919062000e41565b90506000198114620005fe57620005d56080516000846001600160a01b03166200060460201b62000e8b179092919060201c565b620005fe608051600019846001600160a01b03166200060460201b62000e8b179092919060201c565b50505050565b801580620006825750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156200065a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000680919062000e41565b155b620006fa5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084015b60405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152620007529185916200075716565b505050565b6000620007b3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166200083560201b6200104e179092919060201c565b805190915015620007525780806020019051810190620007d4919062000e5b565b620007525760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401620006f1565b60606200084684846000856200084e565b949350505050565b606082471015620008b15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401620006f1565b600080866001600160a01b03168587604051620008cf919062000eae565b60006040518083038185875af1925050503d80600081146200090e576040519150601f19603f3d011682016040523d82523d6000602084013e62000913565b606091505b509092509050620009278783838762000932565b979650505050505050565b60608315620009a35782516200099b576001600160a01b0385163b6200099b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401620006f1565b508162000846565b620008468383815115620009ba5781518083602001fd5b8060405162461bcd60e51b8152600401620006f1919062000ecc565b6001600160a01b0381168114620009ec57600080fd5b50565b60006020828403121562000a0257600080fd5b815162000a0f81620009d6565b9392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b8381101562000a7a57815163ffffffff168752958201959082019060010162000a56565b509495945050505050565b606080825284519082018190526000906020906080840190828801845b8281101562000ac05781518452928401929084019060010162000aa2565b5050508381038285015262000ad6818762000a42565b915050828103604084015262000aed818562000a42565b9695505050505050565b60405161010081016001600160401b038111828210171562000b1d5762000b1d62000a16565b60405290565b80516001600160401b038116811462000b3b57600080fd5b919050565b600082601f83011262000b5257600080fd5b815160206001600160401b038083111562000b715762000b7162000a16565b8260051b604051601f19603f8301168101818110848211171562000b995762000b9962000a16565b60405293845285810183019383810192508785111562000bb857600080fd5b83870191505b84821015620009275762000bd28262000b23565b8352918301919083019062000bbe565b6000610100828403121562000bf657600080fd5b62000c0062000af7565b82519091506001600160401b038082111562000c1b57600080fd5b62000c298583860162000b40565b8352602084015191508082111562000c4057600080fd5b62000c4e8583860162000b40565b6020840152604084015191508082111562000c6857600080fd5b62000c768583860162000b40565b6040840152606084015191508082111562000c9057600080fd5b5062000c9f8482850162000b40565b60608301525062000cb36080830162000b23565b608082015262000cc660a0830162000b23565b60a082015262000cd960c0830162000b23565b60c082015260e082015160e082015292915050565b6000806000806000806000806000898b0361020081121562000d0f57600080fd5b8a5162000d1c81620009d6565b60208c0151909a5062000d2f81620009d6565b60408c015190995062000d4281620009d6565b60608c015190985062000d5581620009d6565b8097505060808b0151955060a08b0151945060c08b015193506101008060df198301121562000d8357600080fd5b62000d8d62000af7565b60e08d01518152908c015160208201526101208c015160408201526101408c01516060820152905062000dc46101608c0162000b23565b608082015262000dd86101808c0162000b23565b60a082015262000dec6101a08c0162000b23565b60c082015262000e006101c08c0162000b23565b60e08201526101e08b01519092506001600160401b0381111562000e2357600080fd5b62000e318c828d0162000be2565b9150509295985092959850929598565b60006020828403121562000e5457600080fd5b5051919050565b60006020828403121562000e6e57600080fd5b8151801515811462000a0f57600080fd5b60005b8381101562000e9c57818101518382015260200162000e82565b83811115620005fe5750506000910152565b6000825162000ec281846020870162000e7f565b9190910192915050565b602081526000825180602084015262000eed81604085016020870162000e7f565b601f01601f19169190910160400192915050565b60805161203462000f2b60003960008181610360015281816106500152610cbf01526120346000f3fe6080604052600436106101485760003560e01c8063a0295c21116100c0578063dbeacd5411610074578063eb10d63411610059578063eb10d63414610428578063f337d92e14610450578063fbefd9721461047857600080fd5b8063dbeacd54146103d2578063e0bab4c41461040057600080fd5b8063ae9467b5116100a5578063ae9467b51461034e578063b0e4556f14610382578063cbd611c7146103aa57600080fd5b8063a0295c21146102fe578063ad5c46481461032657600080fd5b806348d26a44116101175780636508156e116100fc5780636508156e1461029b57806389a30271146102c35780639b07d342146102eb57600080fd5b806348d26a441461024b57806359b67b931461027357600080fd5b806316c24da61461015457806320155023146101a657806326c3b515146101f357806345d97ad41461022357600080fd5b3661014f57005b600080fd5b34801561016057600080fd5b5061017c73b3b209bb213a5da5b947c56f2c770b3e1015f1fe81565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156101b257600080fd5b506101c66101c1366004611861565b6104a0565b6040805173ffffffffffffffffffffffffffffffffffffffff93841681529290911660208301520161019d565b610206610201366004611965565b610634565b60408051938452602084019290925215159082015260600161019d565b34801561022f57600080fd5b5061017c7330c955906735e48d73080fd20cb488518a6333c881565b34801561025757600080fd5b5061017c733f66867b4b6eceba0dbb6776be15619f73bc30a281565b34801561027f57600080fd5b5061017c736b4ee7352406707003bc6f6b96595fd35925af4881565b3480156102a757600080fd5b5061017c73abc30e831b5cc173a9ed5941714a7845c909e7fa81565b3480156102cf57600080fd5b5061017c73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b6102066102f9366004611a15565b610dfa565b34801561030a57600080fd5b5061017c737b8e89b0ce7bac2cfec92a371da899ea8cbdb45081565b34801561033257600080fd5b5061017c73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b34801561035a57600080fd5b5061017c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561038e57600080fd5b5061017c73853d955acef822db058eb8505911ed77f175b99e81565b3480156103b657600080fd5b5061017c739c215206da4bf108ae5aeef9da7cad3352a36dad81565b3480156103de57600080fd5b506103f26103ed366004611a8e565b610e31565b60405190815260200161019d565b34801561040c57600080fd5b5061017c736b175474e89094c44da98b954eedeac495271d0f81565b34801561043457600080fd5b5061017c73e9f183fc656656f1f17af1f2b0df79b8ff9ad8ed81565b34801561045c57600080fd5b5061017c73c9daabc677f3d1301006e723bd21c60be57a591581565b34801561048457600080fd5b5061017c735addc89785d75c86ab939e9e15bfbbb7fc086a8781565b60008073ffffffffffffffffffffffffffffffffffffffff8316736b175474e89094c44da98b954eedeac495271d0f1415610507575073c9daabc677f3d1301006e723bd21c60be57a59159050737b8e89b0ce7bac2cfec92a371da899ea8cbdb450915091565b73ffffffffffffffffffffffffffffffffffffffff831673a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48141561056b575073e9f183fc656656f1f17af1f2b0df79b8ff9ad8ed9050739c215206da4bf108ae5aeef9da7cad3352a36dad915091565b73ffffffffffffffffffffffffffffffffffffffff831673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc214156105cf5750733f66867b4b6eceba0dbb6776be15619f73bc30a290507330c955906735e48d73080fd20cb488518a6333c8915091565b73ffffffffffffffffffffffffffffffffffffffff831673853d955acef822db058eb8505911ed77f175b99e141561062f5750736b4ee7352406707003bc6f6b96595fd35925af48905073b3b209bb213a5da5b947c56f2c770b3e1015f1fe5b915091565b600080803373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146106a7576040517f48f5c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060028d6040015160038111156106c2576106c2611afe565b14156106d4578c6020015191506107b5565b60018d6040015160038111156106ec576106ec611afe565b14156107835773c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff1663d0e30db08a6040518263ffffffff1660e01b81526004016000604051808303818588803b15801561074e57600080fd5b505af1158015610762573d6000803e3d6000fd5b505050505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc291506107b5565b6040517fc582880b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028b6040015160038111156107cd576107cd611afe565b14156107de575060208a0151610849565b60018b6040015160038111156107f6576107f6611afe565b1415610817575073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2610849565b6040517f6c98dcaf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a891015610884576040517f340dabef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff8716610a1e5760008061089f846104a0565b909250905073ffffffffffffffffffffffffffffffffffffffff821615806108db575073ffffffffffffffffffffffffffffffffffffffff8116155b15610912576040517fc582880b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610977576040517f6c98dcaf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f2e2d2984000000000000000000000000000000000000000000000000000000008152600481018c905230602482015273ffffffffffffffffffffffffffffffffffffffff83166044820152735addc89785d75c86ab939e9e15bfbbb7fc086a8790632e2d298490606401600060405180830381600087803b1580156109ff57600080fd5b505af1158015610a13573d6000803e3d6000fd5b505050505050610b59565b8667ffffffffffffffff1660011415610b2757600080610a3d836104a0565b909250905073ffffffffffffffffffffffffffffffffffffffff82161580610a79575073ffffffffffffffffffffffffffffffffffffffff8116155b15610ab0576040517f6c98dcaf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b15576040517fc582880b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b20828c85611065565b5050610b59565b6040517fdbb791da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260019073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610bc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bea9190611b2d565b610bf49190611b75565b945060018b604001516003811115610c0e57610c0e611afe565b1415610d35576040517f2e1a7d4d0000000000000000000000000000000000000000000000000000000081526004810186905273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290632e1a7d4d90602401600060405180830381600087803b158015610c7a57600080fd5b505af1158015610c8e573d6000803e3d6000fd5b50506040517f12a53623000000000000000000000000000000000000000000000000000000008152600481018b90527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1692506312a53623915087906024016000604051808303818588803b158015610d1b57600080fd5b505af1158015610d2f573d6000803e3d6000fd5b50505050505b6040517f0d3b205200000000000000000000000000000000000000000000000000000000815267ffffffffffffffff8816600482015273ffffffffffffffffffffffffffffffffffffffff8716602482015273abc30e831b5cc173a9ed5941714a7845c909e7fa90630d3b2052906044016020604051808303816000875af1158015610dc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de99190611b2d565b505050985098509895505050505050565b60008060006040517f26d18eab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018267ffffffffffffffff161115610e78576040517fdbb791da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5067ffffffffffffffff16949350505050565b801580610f2b57506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610f05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f299190611b2d565b155b610fbc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084015b60405180910390fd5b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b30000000000000000000000000000000000000000000000000000000017905261104990849061153b565b505050565b606061105d8484600085611647565b949350505050565b6040517fba8b722300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152600090735addc89785d75c86ab939e9e15bfbbb7fc086a879063ba8b722390602401600060405180830381865afa1580156110e6573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261112c9190810190611d4a565b505050955050505050506000670de0b6b3a7640000828561114d9190611eaa565b6111579190611ee7565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301529192506000918516906370a0823190602401602060405180830381865afa1580156111c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ed9190611b2d565b9050808210156112a3576040517f23e103a8000000000000000000000000000000000000000000000000000000008152600481018690523060248201819052604482015273ffffffffffffffffffffffffffffffffffffffff87166064820152735addc89785d75c86ab939e9e15bfbbb7fc086a87906323e103a890608401600060405180830381600087803b15801561128657600080fd5b505af115801561129a573d6000803e3d6000fd5b50505050611533565b60006064846112ba84670de0b6b3a7640000611eaa565b6112c49190611ee7565b6112cf906062611eaa565b6112d99190611ee7565b6040517f23e103a8000000000000000000000000000000000000000000000000000000008152600481018290523060248201819052604482015273ffffffffffffffffffffffffffffffffffffffff89166064820152909150735addc89785d75c86ab939e9e15bfbbb7fc086a87906323e103a890608401600060405180830381600087803b15801561136b57600080fd5b505af115801561137f573d6000803e3d6000fd5b50506040517fa267526b000000000000000000000000000000000000000000000000000000008152600060048201819052925073ffffffffffffffffffffffffffffffffffffffff8a16915063a267526b90602401602060405180830381865afa1580156113f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114159190611f22565b90508073ffffffffffffffffffffffffffffffffffffffff16634641257d6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561145f57600080fd5b505af1158015611473573d6000803e3d6000fd5b50735addc89785d75c86ab939e9e15bfbbb7fc086a8792506323e103a8915061149e9050848a611b75565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815260048101919091523060248201819052604482015273ffffffffffffffffffffffffffffffffffffffff8b166064820152608401600060405180830381600087803b15801561151857600080fd5b505af115801561152c573d6000803e3d6000fd5b5050505050505b505050505050565b600061159d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661104e9092919063ffffffff16565b80519091501561104957808060200190518101906115bb9190611f3f565b611049576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610fb3565b6060824710156116d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610fb3565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516117029190611f91565b60006040518083038185875af1925050503d806000811461173f576040519150601f19603f3d011682016040523d82523d6000602084013e611744565b606091505b509150915061175587838387611760565b979650505050505050565b606083156117f35782516117ec5773ffffffffffffffffffffffffffffffffffffffff85163b6117ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610fb3565b508161105d565b61105d83838151156118085781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb39190611fad565b73ffffffffffffffffffffffffffffffffffffffff8116811461185e57600080fd5b50565b60006020828403121561187357600080fd5b813561187e8161183c565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156118d8576118d8611885565b60405290565b6000606082840312156118f057600080fd5b6040516060810181811067ffffffffffffffff8211171561191357611913611885565b60405282358152905080602083013561192b8161183c565b602082015260408301356004811061194257600080fd5b6040919091015292915050565b67ffffffffffffffff8116811461185e57600080fd5b600080600080600080600080610200898b03121561198257600080fd5b61198c8a8a6118de565b975061199b8a60608b016118de565b96506119aa8a60c08b016118de565b95506119ba8a6101208b016118de565b945061018089013593506101a089013592506101c08901356119db8161194f565b91506101e08901356119ec8161183c565b809150509295985092959890939650565b600060608284031215611a0f57600080fd5b50919050565b6000806000806000806101c08789031215611a2f57600080fd5b611a3988886119fd565b9550611a4888606089016119fd565b9450611a578860c089016119fd565b9350611a678861012089016119fd565b925061018087013591506101a0870135611a808161194f565b809150509295509295509295565b60008060008060006101a08688031215611aa757600080fd5b611ab187876119fd565b9450611ac087606088016119fd565b9350611acf8760c088016119fd565b9250611adf8761012088016119fd565b9150610180860135611af08161194f565b809150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060208284031215611b3f57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015611b8757611b87611b46565b500390565b8051611b978161194f565b919050565b600082601f830112611bad57600080fd5b8151602067ffffffffffffffff80831115611bca57611bca611885565b8260051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f83011681018181108482111715611c0d57611c0d611885565b604052938452858101830193838101925087851115611c2b57600080fd5b83870191505b84821015611755578151611c448161194f565b83529183019190830190611c31565b60006101008284031215611c6657600080fd5b611c6e6118b4565b9050815167ffffffffffffffff80821115611c8857600080fd5b611c9485838601611b9c565b83526020840151915080821115611caa57600080fd5b611cb685838601611b9c565b60208401526040840151915080821115611ccf57600080fd5b611cdb85838601611b9c565b60408401526060840151915080821115611cf457600080fd5b50611d0184828501611b9c565b606083015250611d1360808301611b8c565b6080820152611d2460a08301611b8c565b60a0820152611d3560c08301611b8c565b60c082015260e082015160e082015292915050565b6000806000806000806000806000898b03610200811215611d6a57600080fd5b8a51611d758161183c565b60208c0151909a50611d868161183c565b60408c0151909950611d978161183c565b60608c0151909850611da88161183c565b8097505060808b0151955060a08b0151945060c08b01519350610100807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2083011215611df357600080fd5b611dfb6118b4565b915060e08c01518252808c01516020830152506101208b015160408201526101408b015160608201526101608b0151611e338161194f565b60808201526101808b0151611e478161194f565b60a0820152611e596101a08c01611b8c565b60c0820152611e6b6101c08c01611b8c565b60e08201526101e08b015190925067ffffffffffffffff811115611e8e57600080fd5b611e9a8c828d01611c53565b9150509295985092959850929598565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611ee257611ee2611b46565b500290565b600082611f1d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600060208284031215611f3457600080fd5b815161187e8161183c565b600060208284031215611f5157600080fd5b8151801515811461187e57600080fd5b60005b83811015611f7c578181015183820152602001611f64565b83811115611f8b576000848401525b50505050565b60008251611fa3818460208701611f61565b9190910192915050565b6020815260008251806020840152611fcc816040850160208701611f61565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea2646970667358221220e8f5cdb5fc568db2e07e22641a418b3125679a51d742386f41bb19045de77a8464736f6c634300080a0033";

type AngleSLPBridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AngleSLPBridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AngleSLPBridge__factory extends ContractFactory {
  constructor(...args: AngleSLPBridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _rollupProcessor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AngleSLPBridge> {
    return super.deploy(
      _rollupProcessor,
      overrides || {}
    ) as Promise<AngleSLPBridge>;
  }
  override getDeployTransaction(
    _rollupProcessor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_rollupProcessor, overrides || {});
  }
  override attach(address: string): AngleSLPBridge {
    return super.attach(address) as AngleSLPBridge;
  }
  override connect(signer: Signer): AngleSLPBridge__factory {
    return super.connect(signer) as AngleSLPBridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AngleSLPBridgeInterface {
    return new utils.Interface(_abi) as AngleSLPBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AngleSLPBridge {
    return new Contract(address, _abi, signerOrProvider) as AngleSLPBridge;
  }
}
