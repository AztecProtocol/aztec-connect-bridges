/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common.js";
import type {
  StabilityPoolBridge,
  StabilityPoolBridgeInterface,
} from "../StabilityPoolBridge.js";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rollupProcessor",
        type: "address",
      },
      {
        internalType: "address",
        name: "_frontEndTag",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "ApproveFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "AsyncDisabled",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInput",
    type: "error",
  },
  {
    inputs: [],
    name: "MissingImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "FRONTEND_TAG",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LQTY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LUSD",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROLLUP_PROCESSOR",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STABILITY_POOL",
    outputs: [
      {
        internalType: "contract IStabilityPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUBSIDY",
    outputs: [
      {
        internalType: "contract ISubsidy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNI_ROUTER",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "computeCriteria",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "_inputAssetA",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "_outputAssetA",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_totalInputValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_auxData",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "convert",
    outputs: [
      {
        internalType: "uint256",
        name: "outputValueA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "finalise",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "setApprovals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162002a8d38038062002a8d833981016040819052620000349162000289565b604080518082018252601381527f53746162696c697479506f6f6c427269646765000000000000000000000000006020808301918252835180850190945260038085526229a82160e91b918501919091526001600160a01b0386166080528251929392620000a39290620001c6565b508051620000b9906004906020840190620001c6565b5050506001600160a01b03811660a052620000d6306001620000de565b505062000325565b6001600160a01b038216620001395760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200014d9190620002c1565b90915550506001600160a01b038216600090815260208190526040812080548392906200017c908490620002c1565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001d490620002e8565b90600052602060002090601f016020900481019282620001f8576000855562000243565b82601f106200021357805160ff191683800117855562000243565b8280016001018555821562000243579182015b828111156200024357825182559160200191906001019062000226565b506200025192915062000255565b5090565b5b8082111562000251576000815560010162000256565b80516001600160a01b03811681146200028457600080fd5b919050565b600080604083850312156200029d57600080fd5b620002a8836200026c565b9150620002b8602084016200026c565b90509250929050565b60008219821115620002e357634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680620002fd57607f821691505b602082108114156200031f57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05161271f6200036e600039600081816102bd0152818161078c0152611e9c01526000818161048f0152818161068001528181610bf30152610d06015261271f6000f3fe60806040526004361061018b5760003560e01c80638757b15b116100d6578063ad5c46481161007f578063dbeacd5411610059578063dbeacd54146104d9578063dd62ed3e146104ff578063ee0ab4651461055257600080fd5b8063ad5c464814610455578063ae9467b51461047d578063cf59d563146104b157600080fd5b80639b07d342116100b05780639b07d34214610402578063a457c2d714610415578063a9059cbb1461043557600080fd5b80638757b15b146103ae57806389a30271146103c557806395d89b41146103ed57600080fd5b80632ac6e2f311610138578063395093511161011257806339509351146103235780636508156e1461034357806370a082311461036b57600080fd5b80632ac6e2f3146102ab578063313ce567146102df5780633829b6ec146102fb57600080fd5b806318160ddd1161016957806318160ddd1461023857806323b872dd1461025b57806326c3b5151461027b57600080fd5b806306fdde0314610190578063095ea7b3146101bb5780630f92ca69146101eb575b600080fd5b34801561019c57600080fd5b506101a561057a565b6040516101b2919061228a565b60405180910390f35b3480156101c757600080fd5b506101db6101d63660046122cd565b61060c565b60405190151581526020016101b2565b3480156101f757600080fd5b50610213736dea81c8171d0ba574754ef6f8b412f2ed88c54d81565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b2565b34801561024457600080fd5b5061024d610624565b6040519081526020016101b2565b34801561026757600080fd5b506101db6102763660046122f7565b610640565b61028e610289366004612363565b610664565b6040805193845260208401929092521515908201526060016101b2565b3480156102b757600080fd5b506102137f000000000000000000000000000000000000000000000000000000000000000081565b3480156102eb57600080fd5b50604051601281526020016101b2565b34801561030757600080fd5b506102137366017d22b0f8556afdd19fc67041899eb65a21bb81565b34801561032f57600080fd5b506101db61033e3660046122cd565b610b6a565b34801561034f57600080fd5b5061021373abc30e831b5cc173a9ed5941714a7845c909e7fa81565b34801561037757600080fd5b5061024d6103863660046123f5565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b3480156103ba57600080fd5b506103c3610bb6565b005b3480156103d157600080fd5b5061021373a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b3480156103f957600080fd5b506101a5611251565b61028e610410366004612410565b611260565b34801561042157600080fd5b506101db6104303660046122cd565b611297565b34801561044157600080fd5b506101db6104503660046122cd565b611368565b34801561046157600080fd5b5061021373c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b34801561048957600080fd5b506102137f000000000000000000000000000000000000000000000000000000000000000081565b3480156104bd57600080fd5b50610213735f98805a4e8be255a32880fdec7f6728c6568ba081565b3480156104e557600080fd5b5061024d6104f4366004612485565b600095945050505050565b34801561050b57600080fd5b5061024d61051a3660046124f1565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b34801561055e57600080fd5b5061021373e592427a0aece92de3edee1f18e0157c0586156481565b60606003805461058990612524565b80601f01602080910402602001604051908101604052809291908181526020018280546105b590612524565b80156106025780601f106105d757610100808354040283529160200191610602565b820191906000526020600020905b8154815290600101906020018083116105e557829003601f168201915b5050505050905090565b60003361061a818585611376565b5060019392505050565b6000600161063160025490565b61063b91906125a1565b905090565b60003361064e85828561152a565b610659858585611601565b506001949350505050565b600080803373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146106d7576040517f48f5c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b735f98805a4e8be255a32880fdec7f6728c6568ba06106fc60408d0160208e016123f5565b73ffffffffffffffffffffffffffffffffffffffff1614801561074357503061072b60408b0160208c016123f5565b73ffffffffffffffffffffffffffffffffffffffff16145b156108eb576040517f5f788d650000000000000000000000000000000000000000000000000000000081526004810188905273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001660248201527366017d22b0f8556afdd19fc67041899eb65a21bb90635f788d6590604401600060405180830381600087803b1580156107ea57600080fd5b505af11580156107fe573d6000803e3d6000fd5b5050505061080c60006118b4565b6040517f1cdc470000000000000000000000000000000000000000000000000000000000815230600482015260009088907366017d22b0f8556afdd19fc67041899eb65a21bb90631cdc470090602401602060405180830381865afa158015610879573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089d91906125b8565b6108a791906125a1565b905060006108b3610624565b9050806108c2578894506108da565b816108cd8a836125d1565b6108d7919061260e565b94505b6108e43086611f1a565b5050610b5c565b306108fc60408d0160208e016123f5565b73ffffffffffffffffffffffffffffffffffffffff161480156109575750735f98805a4e8be255a32880fdec7f6728c6568ba061093f60408b0160208c016123f5565b73ffffffffffffffffffffffffffffffffffffffff16145b15610b2a576040517f2e54bf95000000000000000000000000000000000000000000000000000000008152600060048201527366017d22b0f8556afdd19fc67041899eb65a21bb90632e54bf9590602401600060405180830381600087803b1580156109c257600080fd5b505af11580156109d6573d6000803e3d6000fd5b505050506109f08567ffffffffffffffff166001146118b4565b6109f8610624565b6040517f1cdc470000000000000000000000000000000000000000000000000000000000815230600482015288907366017d22b0f8556afdd19fc67041899eb65a21bb90631cdc470090602401602060405180830381865afa158015610a62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8691906125b8565b610a9091906125d1565b610a9a919061260e565b6040517f2e54bf95000000000000000000000000000000000000000000000000000000008152600481018290529093507366017d22b0f8556afdd19fc67041899eb65a21bb90632e54bf9590602401600060405180830381600087803b158015610b0357600080fd5b505af1158015610b17573d6000803e3d6000fd5b50505050610b25308861203a565b610b5c565b6040517fb4fa3fb300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b985098509895505050505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919061061a9082908690610bb1908790612649565b611376565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001660048201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6024820152309063095ea7b3906044016020604051808303816000875af1158015610c68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8c9190612661565b610cc9576040517fc90bb86a0000000000000000000000000000000000000000000000000000000081523060048201526024015b60405180910390fd5b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001660048201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6024820152735f98805a4e8be255a32880fdec7f6728c6568ba09063095ea7b3906044016020604051808303816000875af1158015610d8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db39190612661565b610dff576040517fc90bb86a000000000000000000000000000000000000000000000000000000008152735f98805a4e8be255a32880fdec7f6728c6568ba06004820152602401610cc0565b6040517f095ea7b30000000000000000000000000000000000000000000000000000000081527366017d22b0f8556afdd19fc67041899eb65a21bb60048201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6024820152735f98805a4e8be255a32880fdec7f6728c6568ba09063095ea7b3906044016020604051808303816000875af1158015610ea3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec79190612661565b610f13576040517fc90bb86a000000000000000000000000000000000000000000000000000000008152735f98805a4e8be255a32880fdec7f6728c6568ba06004820152602401610cc0565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273e592427a0aece92de3edee1f18e0157c0586156460048201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602482015273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc29063095ea7b3906044016020604051808303816000875af1158015610fb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdb9190612661565b611027576040517fc90bb86a00000000000000000000000000000000000000000000000000000000815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26004820152602401610cc0565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273e592427a0aece92de3edee1f18e0157c0586156460048201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6024820152736dea81c8171d0ba574754ef6f8b412f2ed88c54d9063095ea7b3906044016020604051808303816000875af11580156110cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ef9190612661565b61113b576040517fc90bb86a000000000000000000000000000000000000000000000000000000008152736dea81c8171d0ba574754ef6f8b412f2ed88c54d6004820152602401610cc0565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273e592427a0aece92de3edee1f18e0157c0586156460048201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602482015273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb489063095ea7b3906044016020604051808303816000875af11580156111df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112039190612661565b61124f576040517fc90bb86a00000000000000000000000000000000000000000000000000000000815273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb486004820152602401610cc0565b565b60606004805461058990612524565b60008060006040517f26d18eab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091908381101561135b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610cc0565b6106598286868403611376565b60003361061a818585611601565b73ffffffffffffffffffffffffffffffffffffffff8316611418576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610cc0565b73ffffffffffffffffffffffffffffffffffffffff82166114bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610cc0565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146115fb57818110156115ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610cc0565b6115fb8484848403611376565b50505050565b73ffffffffffffffffffffffffffffffffffffffff83166116a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610cc0565b73ffffffffffffffffffffffffffffffffffffffff8216611747576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610cc0565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902054818110156117fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610cc0565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220858503905591851681529081208054849290611841908490612649565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516118a791815260200190565b60405180910390a36115fb565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600090736dea81c8171d0ba574754ef6f8b412f2ed88c54d906370a0823190602401602060405180830381865afa15801561191f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061194391906125b8565b905068056bc75e2d63100000811115611b50576040805161010081018252736dea81c8171d0ba574754ef6f8b412f2ed88c54d815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26020820152610bb89181019190915230606082015242608082015273e592427a0aece92de3edee1f18e0157c058615649063414bf3899060a081016119d36001866125a1565b815260006020808301829052604092830191909152815160e085811b7fffffffff00000000000000000000000000000000000000000000000000000000168252845173ffffffffffffffffffffffffffffffffffffffff908116600484015292850151831660248301529284015162ffffff1660448201526060840151821660648201526080840151608482015260a084015160a482015260c084015160c482015292909101511660e4820152610104016020604051808303816000875af1925050508015611add575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252611ada918101906125b8565b60015b611b4e573d808015611b0b576040519150601f19603f3d011682016040523d82523d6000602084013e611b10565b606091505b5082611b48576040517f81ceff3000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50611b50565b505b478015611bcd5773c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015611bb357600080fd5b505af1158015611bc7573d6000803e3d6000fd5b50505050505b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2906370a0823190602401602060405180830381865afa158015611c38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c5c91906125b8565b905067016345785d8a00008111156115fb576040805160a0810182527fc02aaa39b223fe8d0a0e5c4f27ead9083c756cc200000000000000000000000060c08201527e01f4000000000000000000000000000000000000000000000000000000000060d482018190527fa0b86991c6218b36c1d19d4a2e9eb0ce3606eb4800000000000000000000000060d783015260eb8201527f5f98805a4e8be255a32880fdec7f6728c6568ba000000000000000000000000060ee820152815160e2818303018152610102820183528152306020820152429181019190915273e592427a0aece92de3edee1f18e0157c058615649063c04b8d599060608101611d626001866125a1565b815260200160008152506040518263ffffffff1660e01b8152600401611d889190612683565b6020604051808303816000875af1925050508015611de1575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252611dde918101906125b8565b60015b611e52573d808015611e0f576040519150601f19603f3d011682016040523d82523d6000602084013e611e14565b606091505b5084611e4c576040517f81ceff3000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506115fb565b8015611f13576040517f5f788d650000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001660248201527366017d22b0f8556afdd19fc67041899eb65a21bb90635f788d6590604401600060405180830381600087803b158015611efa57600080fd5b505af1158015611f0e573d6000803e3d6000fd5b505050505b5050505050565b73ffffffffffffffffffffffffffffffffffffffff8216611f97576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610cc0565b8060026000828254611fa99190612649565b909155505073ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604081208054839290611fe3908490612649565b909155505060405181815273ffffffffffffffffffffffffffffffffffffffff8316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff82166120dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610cc0565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205481811015612193576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610cc0565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604081208383039055600280548492906121cf9084906125a1565b909155505060405182815260009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161151d565b6000815180845260005b8181101561224557602081850181015186830182015201612229565b81811115612257576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061229d602083018461221f565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146122c857600080fd5b919050565b600080604083850312156122e057600080fd5b6122e9836122a4565b946020939093013593505050565b60008060006060848603121561230c57600080fd5b612315846122a4565b9250612323602085016122a4565b9150604084013590509250925092565b60006060828403121561234557600080fd5b50919050565b803567ffffffffffffffff811681146122c857600080fd5b600080600080600080600080610200898b03121561238057600080fd5b61238a8a8a612333565b97506123998a60608b01612333565b96506123a88a60c08b01612333565b95506123b88a6101208b01612333565b945061018089013593506101a089013592506123d76101c08a0161234b565b91506123e66101e08a016122a4565b90509295985092959890939650565b60006020828403121561240757600080fd5b61229d826122a4565b6000806000806000806101c0878903121561242a57600080fd5b6124348888612333565b95506124438860608901612333565b94506124528860c08901612333565b9350612462886101208901612333565b925061018087013591506124796101a0880161234b565b90509295509295509295565b60008060008060006101a0868803121561249e57600080fd5b6124a88787612333565b94506124b78760608801612333565b93506124c68760c08801612333565b92506124d6876101208801612333565b91506124e5610180870161234b565b90509295509295909350565b6000806040838503121561250457600080fd5b61250d836122a4565b915061251b602084016122a4565b90509250929050565b600181811c9082168061253857607f821691505b60208210811415612345577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156125b3576125b3612572565b500390565b6000602082840312156125ca57600080fd5b5051919050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561260957612609612572565b500290565b600082612644577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000821982111561265c5761265c612572565b500190565b60006020828403121561267357600080fd5b8151801515811461229d57600080fd5b602081526000825160a0602084015261269f60c084018261221f565b905073ffffffffffffffffffffffffffffffffffffffff60208501511660408401526040840151606084015260608401516080840152608084015160a0840152809150509291505056fea2646970667358221220f05e9f14bc0f28f707497734db92d69abb15873277857438874910cc3a786c5e64736f6c634300080a0033";

type StabilityPoolBridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StabilityPoolBridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StabilityPoolBridge__factory extends ContractFactory {
  constructor(...args: StabilityPoolBridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _rollupProcessor: PromiseOrValue<string>,
    _frontEndTag: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StabilityPoolBridge> {
    return super.deploy(
      _rollupProcessor,
      _frontEndTag,
      overrides || {}
    ) as Promise<StabilityPoolBridge>;
  }
  override getDeployTransaction(
    _rollupProcessor: PromiseOrValue<string>,
    _frontEndTag: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rollupProcessor,
      _frontEndTag,
      overrides || {}
    );
  }
  override attach(address: string): StabilityPoolBridge {
    return super.attach(address) as StabilityPoolBridge;
  }
  override connect(signer: Signer): StabilityPoolBridge__factory {
    return super.connect(signer) as StabilityPoolBridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StabilityPoolBridgeInterface {
    return new utils.Interface(_abi) as StabilityPoolBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StabilityPoolBridge {
    return new Contract(address, _abi, signerOrProvider) as StabilityPoolBridge;
  }
}
