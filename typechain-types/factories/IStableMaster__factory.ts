/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IStableMaster, IStableMasterInterface } from "../IStableMaster.js";

const _abi = [
  {
    inputs: [],
    name: "agToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolManager",
        type: "address",
      },
    ],
    name: "collateralMap",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "sanToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "perpetualManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "stocksUsers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sanRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collatBase",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "lastBlockUpdated",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockedInterests",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxInterestsDistributed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feesAside",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "slippageFee",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "feesForSLPs",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "slippage",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "interestsForSLPs",
            type: "uint64",
          },
        ],
        internalType: "struct IStableMaster.SLPData",
        name: "slpData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint64[]",
            name: "xFeeMint",
            type: "uint64[]",
          },
          {
            internalType: "uint64[]",
            name: "yFeeMint",
            type: "uint64[]",
          },
          {
            internalType: "uint64[]",
            name: "xFeeBurn",
            type: "uint64[]",
          },
          {
            internalType: "uint64[]",
            name: "yFeeBurn",
            type: "uint64[]",
          },
          {
            internalType: "uint64",
            name: "targetHAHedge",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "bonusMalusMint",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "bonusMalusBurn",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "capOnStableMinted",
            type: "uint256",
          },
        ],
        internalType: "struct IStableMaster.MintBurnData",
        name: "feeData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "poolManager",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "burner",
        type: "address",
      },
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "address",
        name: "poolManager",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IStableMaster__factory {
  static readonly abi = _abi;
  static createInterface(): IStableMasterInterface {
    return new utils.Interface(_abi) as IStableMasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IStableMaster {
    return new Contract(address, _abi, signerOrProvider) as IStableMaster;
  }
}
