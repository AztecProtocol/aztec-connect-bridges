/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common.js";
import type { LidoBridge, LidoBridgeInterface } from "../LidoBridge.js";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rollupProcessor",
        type: "address",
      },
      {
        internalType: "address",
        name: "_referral",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AsyncDisabled",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidConfiguration",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInputA",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOutputA",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidUnwrapReturnValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidWrapReturnValue",
    type: "error",
  },
  {
    inputs: [],
    name: "MissingImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "CURVE_POOL",
    outputs: [
      {
        internalType: "contract ICurvePool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LIDO",
    outputs: [
      {
        internalType: "contract ILido",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REFERRAL",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROLLUP_PROCESSOR",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUBSIDY",
    outputs: [
      {
        internalType: "contract ISubsidy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WRAPPED_STETH",
    outputs: [
      {
        internalType: "contract IWstETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "computeCriteria",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "_inputAssetA",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "_outputAssetA",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_totalInputValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_interactionNonce",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "convert",
    outputs: [
      {
        internalType: "uint256",
        name: "outputValueA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isAsync",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "finalise",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620018503803806200185083398101604081905262000034916200054d565b6001600160a01b03821660805260405163c661065760e01b81526001600482015273ae7ab96520de3a18e5e111b5eaab095312d7fe849073dc24316b9ae028f1497c275eb9192a3ea0f670229063c661065790602401602060405180830381865afa158015620000a8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000ce919062000585565b6001600160a01b031614620000f65760405163c52a9bd360e01b815260040160405180910390fd5b6001600160a01b03811660a0526200014673ae7ab96520de3a18e5e111b5eaab095312d7fe84737f39c581f595b53c5cb19bd0b3f8da6c935e2ca0600019620001ce602090811b6200041d17901c565b6200018973ae7ab96520de3a18e5e111b5eaab095312d7fe8473dc24316b9ae028f1497c275eb9192a3ea0f67022600019620001ce602090811b6200041d17901c565b620001c6608051600019737f39c581f595b53c5cb19bd0b3f8da6c935e2ca06001600160a01b0316620001ce60201b6200041d179092919060201c565b50506200068a565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa15801562000220573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002469190620005a3565b620002529190620005bd565b604080516001600160a01b038616602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152919250620002ae91869190620002b416565b50505050565b600062000310826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166200039b60201b62000558179092919060201c565b805190915015620003965780806020019051810190620003319190620005e4565b620003965760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b505050565b6060620003ac8484600085620003b6565b90505b9392505050565b606082471015620004195760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016200038d565b6001600160a01b0385163b620004725760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200038d565b600080866001600160a01b0316858760405162000490919062000637565b60006040518083038185875af1925050503d8060008114620004cf576040519150601f19603f3d011682016040523d82523d6000602084013e620004d4565b606091505b509092509050620004e7828286620004f2565b979650505050505050565b6060831562000503575081620003af565b825115620005145782518084602001fd5b8160405162461bcd60e51b81526004016200038d919062000655565b80516001600160a01b03811681146200054857600080fd5b919050565b600080604083850312156200056157600080fd5b6200056c8362000530565b91506200057c6020840162000530565b90509250929050565b6000602082840312156200059857600080fd5b620003af8262000530565b600060208284031215620005b657600080fd5b5051919050565b60008219821115620005df57634e487b7160e01b600052601160045260246000fd5b500190565b600060208284031215620005f757600080fd5b81518015158114620003af57600080fd5b60005b83811015620006255781810151838201526020016200060b565b83811115620002ae5750506000910152565b600082516200064b81846020870162000608565b9190910192915050565b60208152600082518060208401526200067681604085016020870162000608565b601f01601f19169190910160400192915050565b60805160a05161118b620006c5600039600081816101f901526108d10152600081816101c50152818161026b0152610776015261118b6000f3fe60806040526004361061009a5760003560e01c80638b21f17011610069578063ae9467b51161004e578063ae9467b5146101b3578063c63568c7146101e7578063dbeacd541461021b57600080fd5b80638b21f170146101785780639b07d342146101a057600080fd5b806312280c19146100a657806326c3b515146100f85780636508156e1461012857806386a8b4b51461015057600080fd5b366100a157005b600080fd5b3480156100b257600080fd5b506100ce737f39c581f595b53c5cb19bd0b3f8da6c935e2ca081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61010b610106366004610e45565b61024f565b6040805193845260208401929092521515908201526060016100ef565b34801561013457600080fd5b506100ce73abc30e831b5cc173a9ed5941714a7845c909e7fa81565b34801561015c57600080fd5b506100ce73dc24316b9ae028f1497c275eb9192a3ea0f6702281565b34801561018457600080fd5b506100ce73ae7ab96520de3a18e5e111b5eaab095312d7fe8481565b61010b6101ae366004610ed7565b6103e6565b3480156101bf57600080fd5b506100ce7f000000000000000000000000000000000000000000000000000000000000000081565b3480156101f357600080fd5b506100ce7f000000000000000000000000000000000000000000000000000000000000000081565b34801561022757600080fd5b50610241610236366004610f4c565b600095945050505050565b6040519081526020016100ef565b600080803373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146102c2576040517f48f5c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060016102d660608e0160408f01610fe7565b60038111156102e7576102e7610fb8565b149050600060028d60400160208101906103019190610fe7565b600381111561031257610312610fb8565b1480156103705750737f39c581f595b53c5cb19bd0b3f8da6c935e2ca073ffffffffffffffffffffffffffffffffffffffff168d60200160208101906103589190611008565b73ffffffffffffffffffffffffffffffffffffffff16145b9050818061037b5750805b6103b1576040517fc582880b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60009250816103ca576103c5898c8a610571565b6103d4565b6103d4898c6107f2565b94505050985098509895505050505050565b60008060006040517f26d18eab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015610494573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b89190611023565b6104c2919061106b565b6040805173ffffffffffffffffffffffffffffffffffffffff8616602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b300000000000000000000000000000000000000000000000000000000179052909150610552908590610aed565b50505050565b60606105678484600085610c03565b90505b9392505050565b600060016105856060850160408601610fe7565b600381111561059657610596610fb8565b146105cd576040517f6c98dcaf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fde0e9a3e00000000000000000000000000000000000000000000000000000000815260048101859052600090737f39c581f595b53c5cb19bd0b3f8da6c935e2ca09063de0e9a3e906024016020604051808303816000875af115801561063b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065f9190611023565b6040517f3df0212400000000000000000000000000000000000000000000000000000000815260016004820152600060248201819052604482018390526064820181905291925073dc24316b9ae028f1497c275eb9192a3ea0f6702290633df02124906084016020604051808303816000875af11580156106e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107089190611023565b905047925080831015610747576040517fe44b5b5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f12a53623000000000000000000000000000000000000000000000000000000008152600481018590527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906312a536239085906024016000604051808303818588803b1580156107d057600080fd5b505af11580156107e4573d6000803e3d6000fd5b505050505050509392505050565b600060026108066060840160408501610fe7565b600381111561081757610817610fb8565b14158061085d5750737f39c581f595b53c5cb19bd0b3f8da6c935e2ca06108446040840160208501611008565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610894576040517f6c98dcaf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fa1903eab00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016600482015273ae7ab96520de3a18e5e111b5eaab095312d7fe849063a1903eab90859060240160206040518083038185885af1158015610935573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061095a9190611023565b506040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009060019073ae7ab96520de3a18e5e111b5eaab095312d7fe84906370a0823190602401602060405180830381865afa1580156109c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ed9190611023565b6109f79190611083565b9050836001610a0783600261106b565b610a11919061106b565b1015610a49576040517fa421abc800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fea598cb000000000000000000000000000000000000000000000000000000000815260048101829052600190737f39c581f595b53c5cb19bd0b3f8da6c935e2ca09063ea598cb0906024016020604051808303816000875af1158015610ab7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adb9190611023565b610ae59190611083565b949350505050565b6000610b4f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166105589092919063ffffffff16565b805190915015610bfe5780806020019051810190610b6d919061109a565b610bfe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b505050565b606082471015610c95576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610bf5565b73ffffffffffffffffffffffffffffffffffffffff85163b610d13576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610bf5565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610d3c91906110e8565b60006040518083038185875af1925050503d8060008114610d79576040519150601f19603f3d011682016040523d82523d6000602084013e610d7e565b606091505b5091509150610d8e828286610d99565b979650505050505050565b60608315610da857508161056a565b825115610db85782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf59190611104565b600060608284031215610dfe57600080fd5b50919050565b803567ffffffffffffffff81168114610e1c57600080fd5b919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610e1c57600080fd5b600080600080600080600080610200898b031215610e6257600080fd5b610e6c8a8a610dec565b9750610e7b8a60608b01610dec565b9650610e8a8a60c08b01610dec565b9550610e9a8a6101208b01610dec565b945061018089013593506101a08901359250610eb96101c08a01610e04565b9150610ec86101e08a01610e21565b90509295985092959890939650565b6000806000806000806101c08789031215610ef157600080fd5b610efb8888610dec565b9550610f0a8860608901610dec565b9450610f198860c08901610dec565b9350610f29886101208901610dec565b92506101808701359150610f406101a08801610e04565b90509295509295509295565b60008060008060006101a08688031215610f6557600080fd5b610f6f8787610dec565b9450610f7e8760608801610dec565b9350610f8d8760c08801610dec565b9250610f9d876101208801610dec565b9150610fac6101808701610e04565b90509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060208284031215610ff957600080fd5b81356004811061056a57600080fd5b60006020828403121561101a57600080fd5b61056a82610e21565b60006020828403121561103557600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561107e5761107e61103c565b500190565b6000828210156110955761109561103c565b500390565b6000602082840312156110ac57600080fd5b8151801515811461056a57600080fd5b60005b838110156110d75781810151838201526020016110bf565b838111156105525750506000910152565b600082516110fa8184602087016110bc565b9190910192915050565b60208152600082518060208401526111238160408501602087016110bc565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea26469706673582212205550202a4942df4d3838377208343e3f248635673ff4f968ff82201bd79dd2be64736f6c634300080a0033";

type LidoBridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LidoBridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LidoBridge__factory extends ContractFactory {
  constructor(...args: LidoBridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _rollupProcessor: PromiseOrValue<string>,
    _referral: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LidoBridge> {
    return super.deploy(
      _rollupProcessor,
      _referral,
      overrides || {}
    ) as Promise<LidoBridge>;
  }
  override getDeployTransaction(
    _rollupProcessor: PromiseOrValue<string>,
    _referral: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rollupProcessor,
      _referral,
      overrides || {}
    );
  }
  override attach(address: string): LidoBridge {
    return super.attach(address) as LidoBridge;
  }
  override connect(signer: Signer): LidoBridge__factory {
    return super.connect(signer) as LidoBridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LidoBridgeInterface {
    return new utils.Interface(_abi) as LidoBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LidoBridge {
    return new Contract(address, _abi, signerOrProvider) as LidoBridge;
  }
}
