/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { UniswapBridge, UniswapBridgeInterface } from "../UniswapBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rollupProcessor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AsyncDisabled",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientAmountOut",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidFeeTier",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidFeeTierEncoding",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInputA",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOutputA",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPercentageAmounts",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenEncoding",
    type: "error",
  },
  {
    inputs: [],
    name: "MissingImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "Overflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "DefaultDecimalsWarning",
    type: "event",
  },
  {
    inputs: [],
    name: "BUSD",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DAI",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "EXPONENT_MASK",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FEE_MASK",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FRAX",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRICE_BIT_LENGTH",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRICE_MASK",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "QUOTER",
    outputs: [
      {
        internalType: "contract IQuoter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROLLUP_PROCESSOR",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROUTER",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SPLIT_PATHS_BIT_LENGTH",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SPLIT_PATH_BIT_LENGTH",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SPLIT_PATH_MASK",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUBSIDY",
    outputs: [
      {
        internalType: "contract ISubsidy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN_MASK",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDT",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WBTC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "computeCriteria",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "_inputAssetA",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "_outputAssetA",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_totalInputValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_interactionNonce",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_auxData",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "convert",
    outputs: [
      {
        internalType: "uint256",
        name: "outputValueA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minAmountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_tokenIn",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "percentage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee1",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee2",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token2",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee3",
            type: "uint256",
          },
        ],
        internalType: "struct UniswapBridge.SplitPath",
        name: "_splitPath1",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "percentage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee1",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee2",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token2",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee3",
            type: "uint256",
          },
        ],
        internalType: "struct UniswapBridge.SplitPath",
        name: "_splitPath2",
        type: "tuple",
      },
    ],
    name: "encodePath",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "finalise",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokensIn",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_tokensOut",
        type: "address[]",
      },
    ],
    name: "preApproveTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_tokenIn",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_path",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "_tokenOut",
        type: "address",
      },
    ],
    name: "quote",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620025ee380380620025ee833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b60805161253e620000b0600039600081816104460152818161054f01528181610b5601528181610f840152610fc6015261253e6000f3fe60806040526004361061019a5760003560e01c80638cb0d0c9116100e1578063ae9467b51161008a578063dbeacd5411610064578063dbeacd54146104b8578063e0bab4c4146104de578063e5488ed214610506578063ee622c3d1461051e57600080fd5b8063ae9467b514610434578063b0e4556f14610468578063c54e44eb1461049057600080fd5b8063a437399a116100bb578063a437399a146103e2578063aa271e27146103f7578063ad5c46481461040c57600080fd5b80638cb0d0c9146103855780638dae88c2146103a75780639b07d342146103cf57600080fd5b80634dede3de116101435780637c09cfde1161011d5780637c09cfde1461030f57806381ebd5291461032f57806389a302711461035d57600080fd5b80634dede3de146102aa5780636508156e146102d2578063797556cc146102fa57600080fd5b806326c3b5151161017457806326c3b5151461020557806332fe7b2614610235578063484f4ea91461028257600080fd5b806301cbe1f5146101a657806312d6a099146101d957806322cfd024146101f057600080fd5b366101a157005b600080fd5b3480156101b257600080fd5b506101bb601f81565b60405167ffffffffffffffff90911681526020015b60405180910390f35b3480156101e557600080fd5b506101bb6207ffff81565b3480156101fc57600080fd5b506101bb601381565b610218610213366004611dc4565b610533565b6040805193845260208401929092521515908201526060016101d0565b34801561024157600080fd5b5061025d73e592427a0aece92de3edee1f18e0157c0586156481565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101d0565b34801561028e57600080fd5b5061025d734fabb145d64652a948d72533023f6e7a623c7c5381565b3480156102b657600080fd5b5061025d732260fac5e5542a773aa44fbcfedf7c193bc2c59981565b3480156102de57600080fd5b5061025d73abc30e831b5cc173a9ed5941714a7845c909e7fa81565b34801561030657600080fd5b506101bb602681565b34801561031b57600080fd5b506101bb61032a366004611e68565b610bcb565b34801561033b57600080fd5b5061034f61034a366004611ec3565b610ccf565b6040519081526020016101d0565b34801561036957600080fd5b5061025d73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b34801561039157600080fd5b506103a56103a0366004611f5c565b610e63565b005b3480156103b357600080fd5b5061025d73b27308f9f90d607463bb33ea1bebb41c27ce5ab681565b6102186103dd366004611fc8565b61101c565b3480156103ee57600080fd5b506101bb600381565b34801561040357600080fd5b506101bb601a81565b34801561041857600080fd5b5061025d73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b34801561044057600080fd5b5061025d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561047457600080fd5b5061025d73853d955acef822db058eb8505911ed77f175b99e81565b34801561049c57600080fd5b5061025d73dac17f958d2ee523a2206206994597c13d831ec781565b3480156104c457600080fd5b5061034f6104d336600461203d565b600095945050505050565b3480156104ea57600080fd5b5061025d736b175474e89094c44da98b954eedeac495271d0f81565b34801561051257600080fd5b506101bb6303ffffff81565b34801561052a57600080fd5b506101bb600781565b600080803373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146105a6576040517f48f5c3ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060016105ba60608e0160408f016120cc565b60038111156105cb576105cb61209d565b149050600060016105e260608d0160408e016120cc565b60038111156105f3576105f361209d565b14905060028d604001602081019061060b91906120cc565b600381111561061c5761061c61209d565b14158015610628575081155b1561065f576040517fc582880b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600261067160608d0160408e016120cc565b60038111156106825761068261209d565b1415801561068e575080155b156106c5576040517f6c98dcaf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061073f836106e7578e60200160208101906106e291906120f4565b6106fd565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc25b8967ffffffffffffffff1684610725578e602001602081019061072091906120f4565b611053565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2611053565b90506000606482600001518c610755919061213e565b61075f919061217b565b8251909150156108355773e592427a0aece92de3edee1f18e0157c0586156463c04b8d598561078f576000610791565b825b6040518060a00160405280866020015181526020013073ffffffffffffffffffffffffffffffffffffffff16815260200142815260200185815260200160008152506040518363ffffffff1660e01b81526004016107ef9190612230565b60206040518083038185885af115801561080d573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108329190612296565b96505b60408201511561092757600061084b828d6122af565b905073e592427a0aece92de3edee1f18e0157c0586156463c04b8d5986610873576000610875565b825b6040805160a0810182526060808901518252306020830152428284015281018690526000608082015290517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526108d69190600401612230565b60206040518083038185885af11580156108f4573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906109199190612296565b61092390896122c6565b9750505b601284610a2e578f602001602081019061094191906120f4565b73ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156109c5575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526109c2918101906122de565b60015b610a28573d8080156109f3576040519150601f19603f3d011682016040523d82523d6000602084013e6109f8565b606091505b506040517fffedc4485579c09008593425e50995352329b8c53feca227b2866eb5559da9d790600090a150610a2e565b60ff1690505b6000610a3b82600a612421565b6080850151610a4a908f61213e565b610a54919061217b565b905080891015610a90576040517fe52970aa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8415610bb7576040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018a905273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290632e1a7d4d90602401600060405180830381600087803b158015610afc57600080fd5b505af1158015610b10573d6000803e3d6000fd5b50506040517f12a53623000000000000000000000000000000000000000000000000000000008152600481018f905273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001692506312a5362391508b906024016000604051808303818588803b158015610b9d57600080fd5b505af1158015610bb1573d6000803e3d6000fd5b50505050505b505050505050985098509895505050505050565b6000610bd9823584356122c6565b606414610c12576040517f4fc6923600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c1b82611132565b6013610c2685611132565b901b602667ffffffffffffffff16610cb089898973ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca891906122de565b60ff166111df565b610cbb92911b6122c6565b610cc591906122c6565b9695505050505050565b600080610ce7858567ffffffffffffffff1685611053565b905060006064826000015188610cfd919061213e565b610d07919061217b565b825190915015610db75760208201516040517fcdca175300000000000000000000000000000000000000000000000000000000815273b27308f9f90d607463bb33ea1bebb41c27ce5ab69163cdca175391610d679190859060040161242d565b6020604051808303816000875af1158015610d86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610daa9190612296565b610db490846122c6565b92505b604082015115610e5957606082015173b27308f9f90d607463bb33ea1bebb41c27ce5ab69063cdca175390610dec848b6122af565b6040518363ffffffff1660e01b8152600401610e0992919061242d565b6020604051808303816000875af1158015610e28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4c9190612296565b610e5690846122c6565b92505b5050949350505050565b8260005b81811015610f2e576000868683818110610e8357610e8361244f565b9050602002016020810190610e9891906120f4565b9050610ed073ffffffffffffffffffffffffffffffffffffffff821673e592427a0aece92de3edee1f18e0157c05861564600061129a565b610f2573ffffffffffffffffffffffffffffffffffffffff821673e592427a0aece92de3edee1f18e0157c058615647fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61129a565b50600101610e67565b5081905060005b81811015611014576000848483818110610f5157610f5161244f565b9050602002016020810190610f6691906120f4565b9050610faa73ffffffffffffffffffffffffffffffffffffffff82167f0000000000000000000000000000000000000000000000000000000000000000600061129a565b61100b73ffffffffffffffffffffffffffffffffffffffff82167f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61129a565b50600101610f35565b505050505050565b60008060006040517f26d18eab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110856040518060a0016040528060008152602001606081526020016000815260200160608152602001600081525090565b600080611098866207ffff87168661145d565b8185526020850181905290925090506000806110be88601389901c6207ffff168861145d565b90925090506110cd82856122c6565b606414611106576040517f4fc6923600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040850182905260608501819052611121602688901c6116ca565b608086015250929695505050505050565b6000813561114257506000919050565b61114f8260a001356116f2565b600261116961116460a08601608087016120f4565b61176d565b901b600561117a85606001356116f2565b901b600761119161116460608801604089016120f4565b901b600a6111a287602001356116f2565b6111b1911b8735600c1b6122c6565b6111bb91906122c6565b6111c591906122c6565b6111cf91906122c6565b6111d991906122c6565b92915050565b600080846111ee84600a612421565b6111f8908661213e565b611202919061217b565b9050621fffff811161121a57600581901b9150611292565b60005b621fffff82111561128057611233600a8361217b565b915061123e8161247e565b9050601f81111561127b576040517f35278d1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61121d565b61128e81600584901b6122c6565b9250505b509392505050565b80158061133a57506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611314573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113389190612296565b155b6113cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084015b60405180910390fd5b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b30000000000000000000000000000000000000000000000000000000017905261145890849061195a565b505050565b600c82901c60606003808516906007600287901c811691600588901c81169188811c1690600a89901c16811580159061149557508315155b1561157457896114a482611a66565b6114ad84611add565b6114b686611a66565b6114bf88611add565b6114c88a611a66565b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606097881b811660208301527fffffff000000000000000000000000000000000000000000000000000000000060e897881b8116603484015295881b8116603783015293861b8516604b82015291861b8316604e83015290931b9091166062830152918a901b90911660658201526079015b60405160208183030381529060405295506116bd565b811561161d578961158482611a66565b61158d84611add565b61159688611a66565b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606095861b811660208301527fffffff000000000000000000000000000000000000000000000000000000000060e895861b8116603484015293861b811660378301529190931b909116604b830152918a901b909116604e82015260620161155e565b8315611636578961162d84611a66565b61158d86611add565b8961164086611a66565b604051606092831b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116602083015260e89290921b7fffffff0000000000000000000000000000000000000000000000000000000000166034820152918a901b166037820152604b0160405160208183030381529060405295505b5050505050935093915050565b6000600582901c601f83166116e081600a612421565b6116ea908361213e565b949350505050565b6000816064141561170557506000919050565b816101f4141561171757506001919050565b81610bb8141561172957506002919050565b81612710141561173b57506003919050565b6040517f3733548a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff821661179257506000919050565b73ffffffffffffffffffffffffffffffffffffffff821673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc214156117cc57506001919050565b73ffffffffffffffffffffffffffffffffffffffff821673a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48141561180657506002919050565b73ffffffffffffffffffffffffffffffffffffffff821673dac17f958d2ee523a2206206994597c13d831ec7141561184057506003919050565b73ffffffffffffffffffffffffffffffffffffffff8216736b175474e89094c44da98b954eedeac495271d0f141561187a57506004919050565b73ffffffffffffffffffffffffffffffffffffffff8216732260fac5e5542a773aa44fbcfedf7c193bc2c59914156118b457506005919050565b73ffffffffffffffffffffffffffffffffffffffff821673853d955acef822db058eb8505911ed77f175b99e14156118ee57506006919050565b73ffffffffffffffffffffffffffffffffffffffff8216734fabb145d64652a948d72533023f6e7a623c7c53141561192857506007919050565b6040517fc1ab6dc100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006119bc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611c0d9092919063ffffffff16565b80519091501561145857808060200190518101906119da91906124b7565b611458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016113c2565b600081611a7557506064919050565b8160011415611a8757506101f4919050565b8160021415611a995750610bb8919050565b8160031415611aab5750612710919050565b6040517f1b719c2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008160011415611b03575073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2919050565b8160021415611b27575073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48919050565b8160031415611b4b575073dac17f958d2ee523a2206206994597c13d831ec7919050565b8160041415611b6f5750736b175474e89094c44da98b954eedeac495271d0f919050565b8160051415611b935750732260fac5e5542a773aa44fbcfedf7c193bc2c599919050565b8160061415611bb7575073853d955acef822db058eb8505911ed77f175b99e919050565b8160071415611bdb5750734fabb145d64652a948d72533023f6e7a623c7c53919050565b6040517f3d51b26900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60606116ea8484600085856000808673ffffffffffffffffffffffffffffffffffffffff168587604051611c4191906124d9565b60006040518083038185875af1925050503d8060008114611c7e576040519150601f19603f3d011682016040523d82523d6000602084013e611c83565b606091505b5091509150610e568783838760608315611d22578251611d1b5773ffffffffffffffffffffffffffffffffffffffff85163b611d1b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016113c2565b50816116ea565b6116ea8383815115611d375781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c291906124f5565b600060608284031215611d7d57600080fd5b50919050565b803567ffffffffffffffff81168114611d9b57600080fd5b919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611d9b57600080fd5b600080600080600080600080610200898b031215611de157600080fd5b611deb8a8a611d6b565b9750611dfa8a60608b01611d6b565b9650611e098a60c08b01611d6b565b9550611e198a6101208b01611d6b565b945061018089013593506101a08901359250611e386101c08a01611d83565b9150611e476101e08a01611da0565b90509295985092959890939650565b600060c08284031215611d7d57600080fd5b60008060008060006101e08688031215611e8157600080fd5b8535945060208601359350611e9860408701611da0565b9250611ea78760608801611e56565b9150611eb7876101208801611e56565b90509295509295909350565b60008060008060808587031215611ed957600080fd5b84359350611ee960208601611da0565b9250611ef760408601611d83565b9150611f0560608601611da0565b905092959194509250565b60008083601f840112611f2257600080fd5b50813567ffffffffffffffff811115611f3a57600080fd5b6020830191508360208260051b8501011115611f5557600080fd5b9250929050565b60008060008060408587031215611f7257600080fd5b843567ffffffffffffffff80821115611f8a57600080fd5b611f9688838901611f10565b90965094506020870135915080821115611faf57600080fd5b50611fbc87828801611f10565b95989497509550505050565b6000806000806000806101c08789031215611fe257600080fd5b611fec8888611d6b565b9550611ffb8860608901611d6b565b945061200a8860c08901611d6b565b935061201a886101208901611d6b565b925061018087013591506120316101a08801611d83565b90509295509295509295565b60008060008060006101a0868803121561205657600080fd5b6120608787611d6b565b945061206f8760608801611d6b565b935061207e8760c08801611d6b565b925061208e876101208801611d6b565b9150611eb76101808701611d83565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000602082840312156120de57600080fd5b8135600481106120ed57600080fd5b9392505050565b60006020828403121561210657600080fd5b6120ed82611da0565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156121765761217661210f565b500290565b6000826121b1577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60005b838110156121d15781810151838201526020016121b9565b838111156121e0576000848401525b50505050565b600081518084526121fe8160208601602086016121b6565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000825160a0602084015261224c60c08401826121e6565b905073ffffffffffffffffffffffffffffffffffffffff60208501511660408401526040840151606084015260608401516080840152608084015160a08401528091505092915050565b6000602082840312156122a857600080fd5b5051919050565b6000828210156122c1576122c161210f565b500390565b600082198211156122d9576122d961210f565b500190565b6000602082840312156122f057600080fd5b815160ff811681146120ed57600080fd5b600181815b8085111561235a57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156123405761234061210f565b8085161561234d57918102915b93841c9390800290612306565b509250929050565b600082612371575060016111d9565b8161237e575060006111d9565b8160018114612394576002811461239e576123ba565b60019150506111d9565b60ff8411156123af576123af61210f565b50506001821b6111d9565b5060208310610133831016604e8410600b84101617156123dd575081810a6111d9565b6123e78383612301565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156124195761241961210f565b029392505050565b60006120ed8383612362565b60408152600061244060408301856121e6565b90508260208301529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156124b0576124b061210f565b5060010190565b6000602082840312156124c957600080fd5b815180151581146120ed57600080fd5b600082516124eb8184602087016121b6565b9190910192915050565b6020815260006120ed60208301846121e656fea264697066735822122063dc69c7f6e83a52605655f1dc66a2d1e19f23d13426cb942f768be89c7f57e464736f6c634300080a0033";

type UniswapBridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapBridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapBridge__factory extends ContractFactory {
  constructor(...args: UniswapBridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _rollupProcessor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapBridge> {
    return super.deploy(
      _rollupProcessor,
      overrides || {}
    ) as Promise<UniswapBridge>;
  }
  override getDeployTransaction(
    _rollupProcessor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_rollupProcessor, overrides || {});
  }
  override attach(address: string): UniswapBridge {
    return super.attach(address) as UniswapBridge;
  }
  override connect(signer: Signer): UniswapBridge__factory {
    return super.connect(signer) as UniswapBridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapBridgeInterface {
    return new utils.Interface(_abi) as UniswapBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapBridge {
    return new Contract(address, _abi, signerOrProvider) as UniswapBridge;
  }
}
