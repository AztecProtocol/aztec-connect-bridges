/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AaveLendingBridge,
  AaveLendingBridgeInterface,
} from "../AaveLendingBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rollupProcessor",
        type: "address",
      },
      {
        internalType: "address",
        name: "_addressesProvider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "claimLiquidityRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "inputAssetA",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "inputAssetB",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "outputAssetA",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "outputAssetB",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "totalInputValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interactionNonce",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "auxData",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "rollupBeneficiary",
        type: "address",
      },
    ],
    name: "convert",
    outputs: [
      {
        internalType: "uint256",
        name: "outputValueA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputValueB",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isAsync",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "inputAssetA",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "inputAssetB",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "outputAssetA",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "outputAssetB",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "interactionNonce",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "auxData",
        type: "uint64",
      },
    ],
    name: "finalise",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "rollupProcessor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "underlyingAsset",
        type: "address",
      },
    ],
    name: "setUnderlyingToZkAToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "underlyingToZkAToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051620025fc380380620025fc83398101604081905261003191610075565b6001600160a01b03918216608052600180546001600160a01b031916919092161790556100a8565b80516001600160a01b038116811461007057600080fd5b919050565b6000806040838503121561008857600080fd5b61009183610059565b915061009f60208401610059565b90509250929050565b608051612524620000d86000396000818160cb015281816101d1015281816108df0152610de901526125246000f3fe608060405260043610620000795760003560e01c80634dd1345311620000545780634dd1345314620001285780639b07d3421462000162578063e714e8921462000179578063ea53851e14620001a057600080fd5b806326c3b515146200007e5780632a113d6e14620000b75780633fc8cef31462000106575b600080fd5b620000956200008f36600462000fca565b620001c2565b6040805193845260208401929092521515908201526060015b60405180910390f35b348015620000c457600080fd5b50620000ed7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001620000ae565b3480156200011357600080fd5b50600054620000ed906001600160a01b031681565b3480156200013557600080fd5b50620000ed620001473660046200106d565b6002602052600090815260409020546001600160a01b031681565b6200009562000173366004620010a6565b620003a7565b3480156200018657600080fd5b506200019e620001983660046200106d565b620003b0565b005b348015620001ad57600080fd5b506200019e620001bf3660046200106d565b50565b60008080336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146200024e5760405162461bcd60e51b815260206004820152602160248201527f416176654c656e64696e674272696467653a20494e56414c49445f43414c4c456044820152602960f91b60648201526084015b60405180910390fd5b60028b60400151600381111562000269576200026962001126565b14620002c95760405162461bcd60e51b815260206004820152602860248201527f416176654c656e64696e674272696467653a20494e5055545f41535345545f4e60448201526704f545f45524332360c41b606482015260840162000245565b600289604001516003811115620002e457620002e462001126565b14620003455760405162461bcd60e51b815260206004820152602960248201527f416176654c656e64696e674272696467653a204f55545055545f41535345545f60448201526804e4f545f45524332360bc1b606482015260840162000245565b6020808c01516001600160a01b0390811660009081526002909252604090912054168062000385576200037d8a6020015189620006d0565b935062000398565b620003958c6020015189620009dd565b93505b50985098509895505050505050565b60008080600080fd5b60015460408051630261bf8b60e01b815290516000926001600160a01b031691630261bf8b9160048083019260209291908290030181865afa158015620003fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000421919062001149565b6040516335ea6a7560e01b81526001600160a01b0384811660048301529192506000918316906335ea6a759060240161018060405180830381865afa1580156200046f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004959190620011f8565b60e0015190506001600160a01b038116620004c45760405162461bcd60e51b8152600401620002459062001300565b6001600160a01b0383811660009081526002602052604090205416156200052e5760405162461bcd60e51b815260206004820152601f60248201527f416176654c656e64696e674272696467653a205a4b5f544f4b454e5f53455400604482015260640162000245565b806001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156200056d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000597919081019062001375565b816001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620005d6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000600919081019062001375565b826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200063f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200066591906200142e565b604051620006739062000ecd565b62000681939291906200147a565b604051809103906000f0801580156200069e573d6000803e3d6000fd5b506001600160a01b03938416600090815260026020526040902080546001600160a01b03191691909416179092555050565b600080600160009054906101000a90046001600160a01b03166001600160a01b0316630261bf8b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000727573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200074d919062001149565b6040516335ea6a7560e01b81526001600160a01b0386811660048301529192506000918316906335ea6a759060240161018060405180830381865afa1580156200079b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007c19190620011f8565b60e0015160405163d15e005360e01b81526001600160a01b03878116600483015291925060009162000846919085169063d15e005390602401602060405180830381865afa15801562000818573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200083e9190620014b7565b869062000e73565b604051631a4ca37b60e21b81526001600160a01b038881166004830152602482018390523060448301529192506000918516906369328dec906064016020604051808303816000875af1158015620008a2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008c89190620014b7565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390529192509088169063095ea7b3906044016020604051808303816000875af11580156200093c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009629190620014d1565b506001600160a01b0387811660009081526002602052604090819020549051630852cd8d60e31b8152600481018990529116906342966c6890602401600060405180830381600087803b158015620009b957600080fd5b505af1158015620009ce573d6000803e3d6000fd5b50929998505050505050505050565b600080600160009054906101000a90046001600160a01b03166001600160a01b0316630261bf8b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000a34573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a5a919062001149565b6040516335ea6a7560e01b81526001600160a01b0386811660048301529192506000918316906335ea6a759060240161018060405180830381865afa15801562000aa8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ace9190620011f8565b60e0015190506001600160a01b03811662000afd5760405162461bcd60e51b8152600401620002459062001300565b6001600160a01b038581166000908152600260205260409020541662000b725760405162461bcd60e51b815260206004820152602360248201527f416176654c656e64696e674272696467653a204e4f5f5a4b5f544f4b454e5f5060448201526213d3d360ea1b606482015260840162000245565b604051630ed1279f60e11b81523060048201526000906001600160a01b03831690631da24f3e90602401602060405180830381865afa15801562000bba573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000be09190620014b7565b60405163095ea7b360e01b81526001600160a01b038581166004830152602482018890529192509087169063095ea7b3906044016020604051808303816000875af115801562000c34573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c5a9190620014d1565b5060405163e8eda9df60e01b81526001600160a01b038781166004830152602482018790523060448301526000606483015284169063e8eda9df90608401600060405180830381600087803b15801562000cb357600080fd5b505af115801562000cc8573d6000803e3d6000fd5b5050604051630ed1279f60e11b81523060048201526000925062000d48915083906001600160a01b03861690631da24f3e90602401602060405180830381865afa15801562000d1b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d419190620014b7565b9062000eb8565b6001600160a01b03888116600090815260026020526040908190205490516340c10f1960e01b81523060048201526024810184905292935016906340c10f1990604401600060405180830381600087803b15801562000da657600080fd5b505af115801562000dbb573d6000803e3d6000fd5b505050506001600160a01b038781166000908152600260205260409081902054905163095ea7b360e01b81527f0000000000000000000000000000000000000000000000000000000000000000831660048201526024810184905291169063095ea7b3906044016020604051808303816000875af115801562000e42573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e689190620014d1565b509695505050505050565b600081156b019d971e4fe8401e74000000198390048411151762000e9657600080fd5b506b033b2e3c9fd0803ce800000091026b019d971e4fe8401e74000000010490565b600062000ec68284620014f5565b9392505050565b610fd3806200151c83390190565b634e487b7160e01b600052604160045260246000fd5b604051610180810167ffffffffffffffff8111828210171562000f185762000f1862000edb565b60405290565b6001600160a01b0381168114620001bf57600080fd5b60006060828403121562000f4757600080fd5b6040516060810181811067ffffffffffffffff8211171562000f6d5762000f6d62000edb565b60405282358152905080602083013562000f878162000f1e565b602082015260408301356004811062000f9f57600080fd5b6040919091015292915050565b803567ffffffffffffffff8116811462000fc557600080fd5b919050565b600080600080600080600080610200898b03121562000fe857600080fd5b62000ff48a8a62000f34565b9750620010058a60608b0162000f34565b9650620010168a60c08b0162000f34565b9550620010288a6101208b0162000f34565b945061018089013593506101a08901359250620010496101c08a0162000fac565b91506101e08901356200105c8162000f1e565b809150509295985092959890939650565b6000602082840312156200108057600080fd5b813562000ec68162000f1e565b600060608284031215620010a057600080fd5b50919050565b6000806000806000806101c08789031215620010c157600080fd5b620010cd88886200108d565b9550620010de88606089016200108d565b9450620010ef8860c089016200108d565b9350620011018861012089016200108d565b925061018087013591506200111a6101a0880162000fac565b90509295509295509295565b634e487b7160e01b600052602160045260246000fd5b805162000fc58162000f1e565b6000602082840312156200115c57600080fd5b815162000ec68162000f1e565b6000602082840312156200117c57600080fd5b6040516020810181811067ffffffffffffffff82111715620011a257620011a262000edb565b6040529151825250919050565b80516fffffffffffffffffffffffffffffffff8116811462000fc557600080fd5b805164ffffffffff8116811462000fc557600080fd5b805160ff8116811462000fc557600080fd5b600061018082840312156200120c57600080fd5b6200121662000ef1565b62001222848462001169565b81526200123260208401620011af565b60208201526200124560408401620011af565b60408201526200125860608401620011af565b60608201526200126b60808401620011af565b60808201526200127e60a08401620011af565b60a08201526200129160c08401620011d0565b60c0820152620012a460e084016200113c565b60e0820152610100620012b98185016200113c565b90820152610120620012cd8482016200113c565b90820152610140620012e18482016200113c565b90820152610160620012f5848201620011e6565b908201529392505050565b60208082526022908201527f416176654c656e64696e674272696467653a204e4f5f4c454e44494e475f504f60408201526113d360f21b606082015260800190565b60005b838110156200135f57818101518382015260200162001345565b838111156200136f576000848401525b50505050565b6000602082840312156200138857600080fd5b815167ffffffffffffffff80821115620013a157600080fd5b818401915084601f830112620013b657600080fd5b815181811115620013cb57620013cb62000edb565b604051601f8201601f19908116603f01168101908382118183101715620013f657620013f662000edb565b816040528281528760208487010111156200141057600080fd5b6200142383602083016020880162001342565b979650505050505050565b6000602082840312156200144157600080fd5b62000ec682620011e6565b600081518084526200146681602086016020860162001342565b601f01601f19169290920160200192915050565b6060815260006200148f60608301866200144c565b8281036020840152620014a381866200144c565b91505060ff83166040830152949350505050565b600060208284031215620014ca57600080fd5b5051919050565b600060208284031215620014e457600080fd5b8151801515811462000ec657600080fd5b6000828210156200151657634e487b7160e01b600052601160045260246000fd5b50039056fe60c06040523480156200001157600080fd5b5060405162000fd338038062000fd38339810160408190526200003491620001ec565b8251839083906200004d90600390602085019062000079565b5080516200006390600490602084019062000079565b5050336080525060ff1660a05250620002ae9050565b828054620000879062000271565b90600052602060002090601f016020900481019282620000ab5760008555620000f6565b82601f10620000c657805160ff1916838001178555620000f6565b82800160010185558215620000f6579182015b82811115620000f6578251825591602001919060010190620000d9565b506200010492915062000108565b5090565b5b8082111562000104576000815560010162000109565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200014757600080fd5b81516001600160401b03808211156200016457620001646200011f565b604051601f8301601f19908116603f011681019082821181831017156200018f576200018f6200011f565b81604052838152602092508683858801011115620001ac57600080fd5b600091505b83821015620001d05785820183015181830184015290820190620001b1565b83821115620001e25760008385830101525b9695505050505050565b6000806000606084860312156200020257600080fd5b83516001600160401b03808211156200021a57600080fd5b620002288783880162000135565b945060208601519150808211156200023f57600080fd5b506200024e8682870162000135565b925050604084015160ff811681146200026657600080fd5b809150509250925092565b600181811c908216806200028657607f821691505b60208210811415620002a857634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a051610cf1620002e26000396000818161016d01526101df01526000818161024201526103f20152610cf16000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806347b83d7d1161009757806395d89b411161006657806395d89b411461027c578063a457c2d714610284578063a9059cbb14610297578063dd62ed3e146102aa57600080fd5b806347b83d7d146101da57806370a082311461020157806379cc67901461022a5780638da5cb5b1461023d57600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461019f57806340c10f19146101b257806342966c68146101c757600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d6102e3565b60405161011a9190610af6565b60405180910390f35b610136610131366004610b67565b610375565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610b91565b61038d565b7f00000000000000000000000000000000000000000000000000000000000000005b60405160ff909116815260200161011a565b6101366101ad366004610b67565b6103b1565b6101c56101c0366004610b67565b6103f0565b005b6101c56101d5366004610bcd565b61047b565b61018d7f000000000000000000000000000000000000000000000000000000000000000081565b61014a61020f366004610be6565b6001600160a01b031660009081526020819052604090205490565b6101c5610238366004610b67565b610488565b6102647f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161011a565b61010d61049d565b610136610292366004610b67565b6104ac565b6101366102a5366004610b67565b61053e565b61014a6102b8366004610c08565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102f290610c3b565b80601f016020809104026020016040519081016040528092919081815260200182805461031e90610c3b565b801561036b5780601f106103405761010080835404028352916020019161036b565b820191906000526020600020905b81548152906001019060200180831161034e57829003601f168201915b5050505050905090565b60003361038381858561054c565b5060019392505050565b60003361039b858285610671565b6103a6858585610703565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061038390829086906103eb908790610c8c565b61054c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316331461046d5760405162461bcd60e51b815260206004820152601760248201527f5a6b41546f6b656e3a20494e56414c4944204f574e455200000000000000000060448201526064015b60405180910390fd5b61047782826108d1565b5050565b61048533826109b0565b50565b610493823383610671565b61047782826109b0565b6060600480546102f290610c3b565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156105315760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610464565b6103a6828686840361054c565b600033610383818585610703565b6001600160a01b0383166105ae5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610464565b6001600160a01b03821661060f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610464565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146106fd57818110156106f05760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610464565b6106fd848484840361054c565b50505050565b6001600160a01b0383166107675760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610464565b6001600160a01b0382166107c95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610464565b6001600160a01b038316600090815260208190526040902054818110156108415760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610464565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610878908490610c8c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108c491815260200190565b60405180910390a36106fd565b6001600160a01b0382166109275760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610464565b80600260008282546109399190610c8c565b90915550506001600160a01b03821660009081526020819052604081208054839290610966908490610c8c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610a105760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610464565b6001600160a01b03821660009081526020819052604090205481811015610a845760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610464565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610ab3908490610ca4565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610664565b600060208083528351808285015260005b81811015610b2357858101830151858201604001528201610b07565b81811115610b35576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610b6257600080fd5b919050565b60008060408385031215610b7a57600080fd5b610b8383610b4b565b946020939093013593505050565b600080600060608486031215610ba657600080fd5b610baf84610b4b565b9250610bbd60208501610b4b565b9150604084013590509250925092565b600060208284031215610bdf57600080fd5b5035919050565b600060208284031215610bf857600080fd5b610c0182610b4b565b9392505050565b60008060408385031215610c1b57600080fd5b610c2483610b4b565b9150610c3260208401610b4b565b90509250929050565b600181811c90821680610c4f57607f821691505b60208210811415610c7057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610c9f57610c9f610c76565b500190565b600082821015610cb657610cb6610c76565b50039056fea26469706673582212200b8f61b6e605b00dd1bb7f01d0d4e6d361b90ee72a95d10338f9cbb1e3b2ba6864736f6c634300080a0033a26469706673582212206d81db153c4cd9838f3188995d53404f60b17baea13ff024cc3ba21457f735f764736f6c634300080a0033";

type AaveLendingBridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AaveLendingBridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AaveLendingBridge__factory extends ContractFactory {
  constructor(...args: AaveLendingBridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AaveLendingBridge";
  }

  deploy(
    _rollupProcessor: string,
    _addressesProvider: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AaveLendingBridge> {
    return super.deploy(
      _rollupProcessor,
      _addressesProvider,
      overrides || {}
    ) as Promise<AaveLendingBridge>;
  }
  getDeployTransaction(
    _rollupProcessor: string,
    _addressesProvider: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rollupProcessor,
      _addressesProvider,
      overrides || {}
    );
  }
  attach(address: string): AaveLendingBridge {
    return super.attach(address) as AaveLendingBridge;
  }
  connect(signer: Signer): AaveLendingBridge__factory {
    return super.connect(signer) as AaveLendingBridge__factory;
  }
  static readonly contractName: "AaveLendingBridge";
  public readonly contractName: "AaveLendingBridge";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AaveLendingBridgeInterface {
    return new utils.Interface(_abi) as AaveLendingBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AaveLendingBridge {
    return new Contract(address, _abi, signerOrProvider) as AaveLendingBridge;
  }
}
