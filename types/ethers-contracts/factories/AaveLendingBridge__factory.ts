/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AaveLendingBridge,
  AaveLendingBridgeInterface,
} from "../AaveLendingBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rollupProcessor",
        type: "address",
      },
      {
        internalType: "address",
        name: "_addressesProvider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "claimLiquidityRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "inputAssetA",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "inputAssetB",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "outputAssetA",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "outputAssetB",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "totalInputValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interactionNonce",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "auxData",
        type: "uint64",
      },
    ],
    name: "convert",
    outputs: [
      {
        internalType: "uint256",
        name: "outputValueA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputValueB",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isAsync",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "inputAssetA",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "inputAssetB",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "outputAssetA",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "outputAssetB",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "interactionNonce",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "auxData",
        type: "uint64",
      },
    ],
    name: "finalise",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "rollupProcessor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "underlyingAsset",
        type: "address",
      },
    ],
    name: "setUnderlyingToZkAToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "underlyingToZkAToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051620026523803806200265283398101604081905261003191610075565b6001600160a01b03918216608052600180546001600160a01b031916919092161790556100a8565b80516001600160a01b038116811461007057600080fd5b919050565b6000806040838503121561008857600080fd5b61009183610059565b915061009f60208401610059565b90509250929050565b60805161257a620000d8600039600081816092015281816101d1015281816108de0152610de8015261257a6000f3fe608060405260043610620000795760003560e01c80635254162b11620000545780635254162b146200012d5780639b07d3421462000162578063e714e8921462000179578063ea53851e14620001a057600080fd5b80632a113d6e146200007e5780633fc8cef314620000d15780634dd1345314620000f3575b600080fd5b3480156200008b57600080fd5b50620000b47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b348015620000de57600080fd5b50600054620000b4906001600160a01b031681565b3480156200010057600080fd5b50620000b46200011236600462000ef0565b6002602052600090815260409020546001600160a01b031681565b620001446200013e36600462000fe9565b620001c2565b604080519384526020840192909252151590820152606001620000c8565b62000144620001733660046200108e565b620003a6565b3480156200018657600080fd5b506200019e6200019836600462000ef0565b620003af565b005b348015620001ad57600080fd5b506200019e620001bf36600462000ef0565b50565b60008080336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146200024e5760405162461bcd60e51b815260206004820152602160248201527f416176654c656e64696e674272696467653a20494e56414c49445f43414c4c456044820152602960f91b60648201526084015b60405180910390fd5b60028a6040015160038111156200026957620002696200110e565b14620002c95760405162461bcd60e51b815260206004820152602860248201527f416176654c656e64696e674272696467653a20494e5055545f41535345545f4e60448201526704f545f45524332360c41b606482015260840162000245565b600288604001516003811115620002e457620002e46200110e565b14620003455760405162461bcd60e51b815260206004820152602960248201527f416176654c656e64696e674272696467653a204f55545055545f41535345545f60448201526804e4f545f45524332360bc1b606482015260840162000245565b6020808b01516001600160a01b0390811660009081526002909252604090912054168062000385576200037d896020015188620006cf565b935062000398565b620003958b6020015188620009dc565b93505b509750975097945050505050565b60008080600080fd5b60015460408051630261bf8b60e01b815290516000926001600160a01b031691630261bf8b9160048083019260209291908290030181865afa158015620003fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000420919062001131565b6040516335ea6a7560e01b81526001600160a01b0384811660048301529192506000918316906335ea6a759060240161018060405180830381865afa1580156200046e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004949190620011e0565b60e0015190506001600160a01b038116620004c35760405162461bcd60e51b81526004016200024590620012e8565b6001600160a01b0383811660009081526002602052604090205416156200052d5760405162461bcd60e51b815260206004820152601f60248201527f416176654c656e64696e674272696467653a205a4b5f544f4b454e5f53455400604482015260640162000245565b806001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156200056c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200059691908101906200135d565b816001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620005d5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620005ff91908101906200135d565b826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200063e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000664919062001416565b604051620006729062000ecc565b620006809392919062001462565b604051809103906000f0801580156200069d573d6000803e3d6000fd5b506001600160a01b03938416600090815260026020526040902080546001600160a01b03191691909416179092555050565b600080600160009054906101000a90046001600160a01b03166001600160a01b0316630261bf8b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000726573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200074c919062001131565b6040516335ea6a7560e01b81526001600160a01b0386811660048301529192506000918316906335ea6a759060240161018060405180830381865afa1580156200079a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007c09190620011e0565b60e0015160405163d15e005360e01b81526001600160a01b03878116600483015291925060009162000845919085169063d15e005390602401602060405180830381865afa15801562000817573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200083d91906200149f565b869062000e72565b604051631a4ca37b60e21b81526001600160a01b038881166004830152602482018390523060448301529192506000918516906369328dec906064016020604051808303816000875af1158015620008a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008c791906200149f565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390529192509088169063095ea7b3906044016020604051808303816000875af11580156200093b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009619190620014b9565b506001600160a01b0387811660009081526002602052604090819020549051630852cd8d60e31b8152600481018990529116906342966c6890602401600060405180830381600087803b158015620009b857600080fd5b505af1158015620009cd573d6000803e3d6000fd5b50929998505050505050505050565b600080600160009054906101000a90046001600160a01b03166001600160a01b0316630261bf8b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000a33573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a59919062001131565b6040516335ea6a7560e01b81526001600160a01b0386811660048301529192506000918316906335ea6a759060240161018060405180830381865afa15801562000aa7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000acd9190620011e0565b60e0015190506001600160a01b03811662000afc5760405162461bcd60e51b81526004016200024590620012e8565b6001600160a01b038581166000908152600260205260409020541662000b715760405162461bcd60e51b815260206004820152602360248201527f416176654c656e64696e674272696467653a204e4f5f5a4b5f544f4b454e5f5060448201526213d3d360ea1b606482015260840162000245565b604051630ed1279f60e11b81523060048201526000906001600160a01b03831690631da24f3e90602401602060405180830381865afa15801562000bb9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bdf91906200149f565b60405163095ea7b360e01b81526001600160a01b038581166004830152602482018890529192509087169063095ea7b3906044016020604051808303816000875af115801562000c33573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c599190620014b9565b5060405163e8eda9df60e01b81526001600160a01b038781166004830152602482018790523060448301526000606483015284169063e8eda9df90608401600060405180830381600087803b15801562000cb257600080fd5b505af115801562000cc7573d6000803e3d6000fd5b5050604051630ed1279f60e11b81523060048201526000925062000d47915083906001600160a01b03861690631da24f3e90602401602060405180830381865afa15801562000d1a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d4091906200149f565b9062000eb7565b6001600160a01b03888116600090815260026020526040908190205490516340c10f1960e01b81523060048201526024810184905292935016906340c10f1990604401600060405180830381600087803b15801562000da557600080fd5b505af115801562000dba573d6000803e3d6000fd5b505050506001600160a01b038781166000908152600260205260409081902054905163095ea7b360e01b81527f0000000000000000000000000000000000000000000000000000000000000000831660048201526024810184905291169063095ea7b3906044016020604051808303816000875af115801562000e41573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e679190620014b9565b509695505050505050565b600081156b019d971e4fe8401e74000000198390048411151762000e9557600080fd5b506b033b2e3c9fd0803ce800000091026b019d971e4fe8401e74000000010490565b600062000ec58284620014dd565b9392505050565b611041806200150483390190565b6001600160a01b0381168114620001bf57600080fd5b60006020828403121562000f0357600080fd5b813562000ec58162000eda565b634e487b7160e01b600052604160045260246000fd5b604051610180810167ffffffffffffffff8111828210171562000f4d5762000f4d62000f10565b60405290565b60006060828403121562000f6657600080fd5b6040516060810181811067ffffffffffffffff8211171562000f8c5762000f8c62000f10565b60405282358152905080602083013562000fa68162000eda565b602082015260408301356004811062000fbe57600080fd5b6040919091015292915050565b803567ffffffffffffffff8116811462000fe457600080fd5b919050565b60008060008060008060006101e0888a0312156200100657600080fd5b62001012898962000f53565b9650620010238960608a0162000f53565b9550620010348960c08a0162000f53565b945062001046896101208a0162000f53565b935061018088013592506101a08801359150620010676101c0890162000fcb565b905092959891949750929550565b6000606082840312156200108857600080fd5b50919050565b6000806000806000806101c08789031215620010a957600080fd5b620010b5888862001075565b9550620010c6886060890162001075565b9450620010d78860c0890162001075565b9350620010e988610120890162001075565b92506101808701359150620011026101a0880162000fcb565b90509295509295509295565b634e487b7160e01b600052602160045260246000fd5b805162000fe48162000eda565b6000602082840312156200114457600080fd5b815162000ec58162000eda565b6000602082840312156200116457600080fd5b6040516020810181811067ffffffffffffffff821117156200118a576200118a62000f10565b6040529151825250919050565b80516fffffffffffffffffffffffffffffffff8116811462000fe457600080fd5b805164ffffffffff8116811462000fe457600080fd5b805160ff8116811462000fe457600080fd5b60006101808284031215620011f457600080fd5b620011fe62000f26565b6200120a848462001151565b81526200121a6020840162001197565b60208201526200122d6040840162001197565b6040820152620012406060840162001197565b6060820152620012536080840162001197565b60808201526200126660a0840162001197565b60a08201526200127960c08401620011b8565b60c08201526200128c60e0840162001124565b60e0820152610100620012a181850162001124565b90820152610120620012b584820162001124565b90820152610140620012c984820162001124565b90820152610160620012dd848201620011ce565b908201529392505050565b60208082526022908201527f416176654c656e64696e674272696467653a204e4f5f4c454e44494e475f504f60408201526113d360f21b606082015260800190565b60005b83811015620013475781810151838201526020016200132d565b8381111562001357576000848401525b50505050565b6000602082840312156200137057600080fd5b815167ffffffffffffffff808211156200138957600080fd5b818401915084601f8301126200139e57600080fd5b815181811115620013b357620013b362000f10565b604051601f8201601f19908116603f01168101908382118183101715620013de57620013de62000f10565b81604052828152876020848701011115620013f857600080fd5b6200140b8360208301602088016200132a565b979650505050505050565b6000602082840312156200142957600080fd5b62000ec582620011ce565b600081518084526200144e8160208601602086016200132a565b601f01601f19169290920160200192915050565b60608152600062001477606083018662001434565b82810360208401526200148b818662001434565b91505060ff83166040830152949350505050565b600060208284031215620014b257600080fd5b5051919050565b600060208284031215620014cc57600080fd5b8151801515811462000ec557600080fd5b600082821015620014fe57634e487b7160e01b600052601160045260246000fd5b50039056fe60c06040523480156200001157600080fd5b5060405162001041380380620010418339810160408190526200003491620001ec565b8251839083906200004d90600390602085019062000079565b5080516200006390600490602084019062000079565b5050336080525060ff1660a05250620002ae9050565b828054620000879062000271565b90600052602060002090601f016020900481019282620000ab5760008555620000f6565b82601f10620000c657805160ff1916838001178555620000f6565b82800160010185558215620000f6579182015b82811115620000f6578251825591602001919060010190620000d9565b506200010492915062000108565b5090565b5b8082111562000104576000815560010162000109565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200014757600080fd5b81516001600160401b03808211156200016457620001646200011f565b604051601f8301601f19908116603f011681019082821181831017156200018f576200018f6200011f565b81604052838152602092508683858801011115620001ac57600080fd5b600091505b83821015620001d05785820183015181830184015290820190620001b1565b83821115620001e25760008385830101525b9695505050505050565b6000806000606084860312156200020257600080fd5b83516001600160401b03808211156200021a57600080fd5b620002288783880162000135565b945060208601519150808211156200023f57600080fd5b506200024e8682870162000135565b925050604084015160ff811681146200026657600080fd5b809150509250925092565b600181811c908216806200028657607f821691505b60208210811415620002a857634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a051610d5f620002e26000396000818161016d01526101df01526000818161024201526104780152610d5f6000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806347b83d7d1161009757806395d89b411161006657806395d89b411461027c578063a457c2d714610284578063a9059cbb14610297578063dd62ed3e146102aa57600080fd5b806347b83d7d146101da57806370a082311461020157806379cc67901461022a5780638da5cb5b1461023d57600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461019f57806340c10f19146101b257806342966c68146101c757600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d6102e3565b60405161011a9190610b64565b60405180910390f35b610136610131366004610bd5565b610375565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610bff565b61038b565b7f00000000000000000000000000000000000000000000000000000000000000005b60405160ff909116815260200161011a565b6101366101ad366004610bd5565b61043a565b6101c56101c0366004610bd5565b610476565b005b6101c56101d5366004610c3b565b6104fc565b61018d7f000000000000000000000000000000000000000000000000000000000000000081565b61014a61020f366004610c54565b6001600160a01b031660009081526020819052604090205490565b6101c5610238366004610bd5565b610509565b6102647f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161011a565b61010d61058f565b610136610292366004610bd5565b61059e565b6101366102a5366004610bd5565b610637565b61014a6102b8366004610c76565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102f290610ca9565b80601f016020809104026020016040519081016040528092919081815260200182805461031e90610ca9565b801561036b5780601f106103405761010080835404028352916020019161036b565b820191906000526020600020905b81548152906001019060200180831161034e57829003601f168201915b5050505050905090565b6000610382338484610644565b50600192915050565b6000610398848484610768565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104225760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61042f8533858403610644565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610382918590610471908690610cfa565b610644565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146104ee5760405162461bcd60e51b815260206004820152601760248201527f5a6b41546f6b656e3a20494e56414c4944204f574e45520000000000000000006044820152606401610419565b6104f88282610937565b5050565b6105063382610a16565b50565b600061051583336102b8565b9050818110156105735760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b6064820152608401610419565b6105808333848403610644565b61058a8383610a16565b505050565b6060600480546102f290610ca9565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156106205760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610419565b61062d3385858403610644565b5060019392505050565b6000610382338484610768565b6001600160a01b0383166106a65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610419565b6001600160a01b0382166107075760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610419565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166107cc5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610419565b6001600160a01b03821661082e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610419565b6001600160a01b038316600090815260208190526040902054818110156108a65760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610419565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906108dd908490610cfa565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161092991815260200190565b60405180910390a350505050565b6001600160a01b03821661098d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610419565b806002600082825461099f9190610cfa565b90915550506001600160a01b038216600090815260208190526040812080548392906109cc908490610cfa565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610a765760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610419565b6001600160a01b03821660009081526020819052604090205481811015610aea5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610419565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610b19908490610d12565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600060208083528351808285015260005b81811015610b9157858101830151858201604001528201610b75565b81811115610ba3576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610bd057600080fd5b919050565b60008060408385031215610be857600080fd5b610bf183610bb9565b946020939093013593505050565b600080600060608486031215610c1457600080fd5b610c1d84610bb9565b9250610c2b60208501610bb9565b9150604084013590509250925092565b600060208284031215610c4d57600080fd5b5035919050565b600060208284031215610c6657600080fd5b610c6f82610bb9565b9392505050565b60008060408385031215610c8957600080fd5b610c9283610bb9565b9150610ca060208401610bb9565b90509250929050565b600181811c90821680610cbd57607f821691505b60208210811415610cde57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610d0d57610d0d610ce4565b500190565b600082821015610d2457610d24610ce4565b50039056fea264697066735822122040a705d445e19e49f03da1b221f5ed4671fbd0ec1bc68f19569d3e1a5c57e8ae64736f6c634300080a0033a264697066735822122073fd000372ea6a55e4d4aa4c80139b6bb8fa30f5948c5051ac784f708e32227b64736f6c634300080a0033";

type AaveLendingBridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AaveLendingBridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AaveLendingBridge__factory extends ContractFactory {
  constructor(...args: AaveLendingBridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AaveLendingBridge";
  }

  deploy(
    _rollupProcessor: string,
    _addressesProvider: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AaveLendingBridge> {
    return super.deploy(
      _rollupProcessor,
      _addressesProvider,
      overrides || {}
    ) as Promise<AaveLendingBridge>;
  }
  getDeployTransaction(
    _rollupProcessor: string,
    _addressesProvider: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rollupProcessor,
      _addressesProvider,
      overrides || {}
    );
  }
  attach(address: string): AaveLendingBridge {
    return super.attach(address) as AaveLendingBridge;
  }
  connect(signer: Signer): AaveLendingBridge__factory {
    return super.connect(signer) as AaveLendingBridge__factory;
  }
  static readonly contractName: "AaveLendingBridge";
  public readonly contractName: "AaveLendingBridge";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AaveLendingBridgeInterface {
    return new utils.Interface(_abi) as AaveLendingBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AaveLendingBridge {
    return new Contract(address, _abi, signerOrProvider) as AaveLendingBridge;
  }
}
